// -------------------------------------------------------------
//
// Module: fir128hdl
// Generated by MATLAB(R) 9.12 and Filter Design HDL Coder 3.1.11.
// Generated on: 2023-03-24 23:05:13
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Code Generation Options:
//
// InputType: signed/unsigned
// OutputType: signed/unsigned
// ResetType: Synchronous
// FIRAdderStyle: tree
// TargetDirectory: Z:\duxu\FPGA\matlab\fir128hdl_matlab_generate
// AddPipelineRegisters: on
// Name: fir128hdl
// TargetLanguage: Verilog
// TestBenchStimulus: impulse step ramp chirp noise 

// -------------------------------------------------------------
// HDL Implementation    : Fully parallel
// Folding Factor        : 1
// -------------------------------------------------------------




`timescale 1 ns / 1 ns

module fir32hdl
               (
                clk,
                clk_enable,
                reset,
                filter_in,
                filter_out
                );

  input   clk; 
  input   clk_enable; 
  input   reset; 
  input   signed [15:0] filter_in; //sfix16_En15
  output  signed [33:0] filter_out; //sfix34_En32

////////////////////////////////////////////////////////////////
//Module Architecture: fir128hdl
////////////////////////////////////////////////////////////////
  // Local Functions
  // Type Definitions
  // Constants
  parameter signed [15:0] coeff1 =   16'b0000000000101011; //sfix16_En17
  parameter signed [15:0] coeff2 =   16'b0000000000110110; //sfix16_En17
  parameter signed [15:0] coeff3 =   16'b0000000000101101; //sfix16_En17
  parameter signed [15:0] coeff4 =   16'b0000000000010010; //sfix16_En17
  parameter signed [15:0] coeff5 =   16'b1111111111101101; //sfix16_En17
  parameter signed [15:0] coeff6 =   16'b1111111111001010; //sfix16_En17
  parameter signed [15:0] coeff7 =   16'b1111111110110111; //sfix16_En17
  parameter signed [15:0] coeff8 =   16'b1111111111000000; //sfix16_En17
  parameter signed [15:0] coeff9 =   16'b1111111111100101; //sfix16_En17
  parameter signed [15:0] coeff10 =  16'b0000000000011110; //sfix16_En17
  parameter signed [15:0] coeff11 =  16'b0000000001010101; //sfix16_En17
  parameter signed [15:0] coeff12 =  16'b0000000001110100; //sfix16_En17
  parameter signed [15:0] coeff13 =  16'b0000000001101000; //sfix16_En17
  parameter signed [15:0] coeff14 =  16'b0000000000101100; //sfix16_En17
  parameter signed [15:0] coeff15 =  16'b1111111111010000; //sfix16_En17
  parameter signed [15:0] coeff16 =  16'b1111111101110100; //sfix16_En17
  parameter signed [15:0] coeff17 =  16'b1111111101000010; //sfix16_En17
  parameter signed [15:0] coeff18 =  16'b1111111101010111; //sfix16_En17
  parameter signed [15:0] coeff19 =  16'b1111111110111001; //sfix16_En17
  parameter signed [15:0] coeff20 =  16'b0000000001001110; //sfix16_En17
  parameter signed [15:0] coeff21 =  16'b0000000011011111; //sfix16_En17
  parameter signed [15:0] coeff22 =  16'b0000000100101101; //sfix16_En17
  parameter signed [15:0] coeff23 =  16'b0000000100001010; //sfix16_En17
  parameter signed [15:0] coeff24 =  16'b0000000001101110; //sfix16_En17
  parameter signed [15:0] coeff25 =  16'b1111111110001000; //sfix16_En17
  parameter signed [15:0] coeff26 =  16'b1111111010101011; //sfix16_En17
  parameter signed [15:0] coeff27 =  16'b1111111000110111; //sfix16_En17
  parameter signed [15:0] coeff28 =  16'b1111111001110000; //sfix16_En17
  parameter signed [15:0] coeff29 =  16'b1111111101011011; //sfix16_En17
  parameter signed [15:0] coeff30 =  16'b0000000010110010; //sfix16_En17
  parameter signed [15:0] coeff31 =  16'b0000000111111000; //sfix16_En17
  parameter signed [15:0] coeff32 =  16'b0000001010011111; //sfix16_En17
  parameter signed [15:0] coeff33 =  16'b0000001001001001; //sfix16_En17
  parameter signed [15:0] coeff34 =  16'b0000000011110000; //sfix16_En17
  parameter signed [15:0] coeff35 =  16'b1111111011111110; //sfix16_En17
  parameter signed [15:0] coeff36 =  16'b1111110100101001; //sfix16_En17
  parameter signed [15:0] coeff37 =  16'b1111110000111011; //sfix16_En17
  parameter signed [15:0] coeff38 =  16'b1111110010111010; //sfix16_En17
  parameter signed [15:0] coeff39 =  16'b1111111010101000; //sfix16_En17
  parameter signed [15:0] coeff40 =  16'b0000000101110001; //sfix16_En17
  parameter signed [15:0] coeff41 =  16'b0000010000001110; //sfix16_En17
  parameter signed [15:0] coeff42 =  16'b0000010101100010; //sfix16_En17
  parameter signed [15:0] coeff43 =  16'b0000010010101110; //sfix16_En17
  parameter signed [15:0] coeff44 =  16'b0000000111101100; //sfix16_En17
  parameter signed [15:0] coeff45 =  16'b1111110111101110; //sfix16_En17
  parameter signed [15:0] coeff46 =  16'b1111101000100111; //sfix16_En17
  parameter signed [15:0] coeff47 =  16'b1111100000110010; //sfix16_En17
  parameter signed [15:0] coeff48 =  16'b1111100100101011; //sfix16_En17
  parameter signed [15:0] coeff49 =  16'b1111110100101011; //sfix16_En17
  parameter signed [15:0] coeff50 =  16'b0000001100010100; //sfix16_En17
  parameter signed [15:0] coeff51 =  16'b0000100011001101; //sfix16_En17
  parameter signed [15:0] coeff52 =  16'b0000101111101101; //sfix16_En17
  parameter signed [15:0] coeff53 =  16'b0000101010100010; //sfix16_En17
  parameter signed [15:0] coeff54 =  16'b0000010010000001; //sfix16_En17
  parameter signed [15:0] coeff55 =  16'b1111101011110111; //sfix16_En17
  parameter signed [15:0] coeff56 =  16'b1111000100011100; //sfix16_En17
  parameter signed [15:0] coeff57 =  16'b1110101011110011; //sfix16_En17
  parameter signed [15:0] coeff58 =  16'b1110110000110010; //sfix16_En17
  parameter signed [15:0] coeff59 =  16'b1111011100000000; //sfix16_En17
  parameter signed [15:0] coeff60 =  16'b0000101100010001; //sfix16_En17
  parameter signed [15:0] coeff61 =  16'b0010010101101001; //sfix16_En17
  parameter signed [15:0] coeff62 =  16'b0100000011110110; //sfix16_En17
  parameter signed [15:0] coeff63 =  16'b0101011111001010; //sfix16_En17
  parameter signed [15:0] coeff64 =  16'b0110010010110110; //sfix16_En17
  parameter signed [15:0] coeff65 =  16'b0110010010110110; //sfix16_En17
  parameter signed [15:0] coeff66 =  16'b0101011111001010; //sfix16_En17
  parameter signed [15:0] coeff67 =  16'b0100000011110110; //sfix16_En17
  parameter signed [15:0] coeff68 =  16'b0010010101101001; //sfix16_En17
  parameter signed [15:0] coeff69 =  16'b0000101100010001; //sfix16_En17
  parameter signed [15:0] coeff70 =  16'b1111011100000000; //sfix16_En17
  parameter signed [15:0] coeff71 =  16'b1110110000110010; //sfix16_En17
  parameter signed [15:0] coeff72 =  16'b1110101011110011; //sfix16_En17
  parameter signed [15:0] coeff73 =  16'b1111000100011100; //sfix16_En17
  parameter signed [15:0] coeff74 =  16'b1111101011110111; //sfix16_En17
  parameter signed [15:0] coeff75 =  16'b0000010010000001; //sfix16_En17
  parameter signed [15:0] coeff76 =  16'b0000101010100010; //sfix16_En17
  parameter signed [15:0] coeff77 =  16'b0000101111101101; //sfix16_En17
  parameter signed [15:0] coeff78 =  16'b0000100011001101; //sfix16_En17
  parameter signed [15:0] coeff79 =  16'b0000001100010100; //sfix16_En17
  parameter signed [15:0] coeff80 =  16'b1111110100101011; //sfix16_En17
  parameter signed [15:0] coeff81 =  16'b1111100100101011; //sfix16_En17
  parameter signed [15:0] coeff82 =  16'b1111100000110010; //sfix16_En17
  parameter signed [15:0] coeff83 =  16'b1111101000100111; //sfix16_En17
  parameter signed [15:0] coeff84 =  16'b1111110111101110; //sfix16_En17
  parameter signed [15:0] coeff85 =  16'b0000000111101100; //sfix16_En17
  parameter signed [15:0] coeff86 =  16'b0000010010101110; //sfix16_En17
  parameter signed [15:0] coeff87 =  16'b0000010101100010; //sfix16_En17
  parameter signed [15:0] coeff88 =  16'b0000010000001110; //sfix16_En17
  parameter signed [15:0] coeff89 =  16'b0000000101110001; //sfix16_En17
  parameter signed [15:0] coeff90 =  16'b1111111010101000; //sfix16_En17
  parameter signed [15:0] coeff91 =  16'b1111110010111010; //sfix16_En17
  parameter signed [15:0] coeff92 =  16'b1111110000111011; //sfix16_En17
  parameter signed [15:0] coeff93 =  16'b1111110100101001; //sfix16_En17
  parameter signed [15:0] coeff94 =  16'b1111111011111110; //sfix16_En17
  parameter signed [15:0] coeff95 =  16'b0000000011110000; //sfix16_En17
  parameter signed [15:0] coeff96 =  16'b0000001001001001; //sfix16_En17
  parameter signed [15:0] coeff97 =  16'b0000001010011111; //sfix16_En17
  parameter signed [15:0] coeff98 =  16'b0000000111111000; //sfix16_En17
  parameter signed [15:0] coeff99 =  16'b0000000010110010; //sfix16_En17
  parameter signed [15:0] coeff100 = 16'b1111111101011011; //sfix16_En17
  parameter signed [15:0] coeff101 = 16'b1111111001110000; //sfix16_En17
  parameter signed [15:0] coeff102 = 16'b1111111000110111; //sfix16_En17
  parameter signed [15:0] coeff103 = 16'b1111111010101011; //sfix16_En17
  parameter signed [15:0] coeff104 = 16'b1111111110001000; //sfix16_En17
  parameter signed [15:0] coeff105 = 16'b0000000001101110; //sfix16_En17
  parameter signed [15:0] coeff106 = 16'b0000000100001010; //sfix16_En17
  parameter signed [15:0] coeff107 = 16'b0000000100101101; //sfix16_En17
  parameter signed [15:0] coeff108 = 16'b0000000011011111; //sfix16_En17
  parameter signed [15:0] coeff109 = 16'b0000000001001110; //sfix16_En17
  parameter signed [15:0] coeff110 = 16'b1111111110111001; //sfix16_En17
  parameter signed [15:0] coeff111 = 16'b1111111101010111; //sfix16_En17
  parameter signed [15:0] coeff112 = 16'b1111111101000010; //sfix16_En17
  parameter signed [15:0] coeff113 = 16'b1111111101110100; //sfix16_En17
  parameter signed [15:0] coeff114 = 16'b1111111111010000; //sfix16_En17
  parameter signed [15:0] coeff115 = 16'b0000000000101100; //sfix16_En17
  parameter signed [15:0] coeff116 = 16'b0000000001101000; //sfix16_En17
  parameter signed [15:0] coeff117 = 16'b0000000001110100; //sfix16_En17
  parameter signed [15:0] coeff118 = 16'b0000000001010101; //sfix16_En17
  parameter signed [15:0] coeff119 = 16'b0000000000011110; //sfix16_En17
  parameter signed [15:0] coeff120 = 16'b1111111111100101; //sfix16_En17
  parameter signed [15:0] coeff121 = 16'b1111111111000000; //sfix16_En17
  parameter signed [15:0] coeff122 = 16'b1111111110110111; //sfix16_En17
  parameter signed [15:0] coeff123 = 16'b1111111111001010; //sfix16_En17
  parameter signed [15:0] coeff124 = 16'b1111111111101101; //sfix16_En17
  parameter signed [15:0] coeff125 = 16'b0000000000010010; //sfix16_En17
  parameter signed [15:0] coeff126 = 16'b0000000000101101; //sfix16_En17
  parameter signed [15:0] coeff127 = 16'b0000000000110110; //sfix16_En17
  parameter signed [15:0] coeff128 = 16'b0000000000101011; //sfix16_En17

  // Signals
  reg  signed [15:0] delay_pipeline [0:127] ; // sfix16_En15
  wire signed [30:0] product128; // sfix31_En32
  wire signed [31:0] mul_temp; // sfix32_En32
  wire signed [30:0] product127; // sfix31_En32
  wire signed [31:0] mul_temp_1; // sfix32_En32
  wire signed [30:0] product126; // sfix31_En32
  wire signed [31:0] mul_temp_2; // sfix32_En32
  wire signed [30:0] product125; // sfix31_En32
  wire signed [31:0] mul_temp_3; // sfix32_En32
  wire signed [30:0] product124; // sfix31_En32
  wire signed [31:0] mul_temp_4; // sfix32_En32
  wire signed [30:0] product123; // sfix31_En32
  wire signed [31:0] mul_temp_5; // sfix32_En32
  wire signed [30:0] product122; // sfix31_En32
  wire signed [31:0] mul_temp_6; // sfix32_En32
  wire signed [30:0] product121; // sfix31_En32
  wire signed [16:0] mulpwr2_temp; // sfix17_En15
  wire signed [30:0] product120; // sfix31_En32
  wire signed [31:0] mul_temp_7; // sfix32_En32
  wire signed [30:0] product119; // sfix31_En32
  wire signed [31:0] mul_temp_8; // sfix32_En32
  wire signed [30:0] product118; // sfix31_En32
  wire signed [31:0] mul_temp_9; // sfix32_En32
  wire signed [30:0] product117; // sfix31_En32
  wire signed [31:0] mul_temp_10; // sfix32_En32
  wire signed [30:0] product116; // sfix31_En32
  wire signed [31:0] mul_temp_11; // sfix32_En32
  wire signed [30:0] product115; // sfix31_En32
  wire signed [31:0] mul_temp_12; // sfix32_En32
  wire signed [30:0] product114; // sfix31_En32
  wire signed [31:0] mul_temp_13; // sfix32_En32
  wire signed [30:0] product113; // sfix31_En32
  wire signed [31:0] mul_temp_14; // sfix32_En32
  wire signed [30:0] product112; // sfix31_En32
  wire signed [31:0] mul_temp_15; // sfix32_En32
  wire signed [30:0] product111; // sfix31_En32
  wire signed [31:0] mul_temp_16; // sfix32_En32
  wire signed [30:0] product110; // sfix31_En32
  wire signed [31:0] mul_temp_17; // sfix32_En32
  wire signed [30:0] product109; // sfix31_En32
  wire signed [31:0] mul_temp_18; // sfix32_En32
  wire signed [30:0] product108; // sfix31_En32
  wire signed [31:0] mul_temp_19; // sfix32_En32
  wire signed [30:0] product107; // sfix31_En32
  wire signed [31:0] mul_temp_20; // sfix32_En32
  wire signed [30:0] product106; // sfix31_En32
  wire signed [31:0] mul_temp_21; // sfix32_En32
  wire signed [30:0] product105; // sfix31_En32
  wire signed [31:0] mul_temp_22; // sfix32_En32
  wire signed [30:0] product104; // sfix31_En32
  wire signed [31:0] mul_temp_23; // sfix32_En32
  wire signed [30:0] product103; // sfix31_En32
  wire signed [31:0] mul_temp_24; // sfix32_En32
  wire signed [30:0] product102; // sfix31_En32
  wire signed [31:0] mul_temp_25; // sfix32_En32
  wire signed [30:0] product101; // sfix31_En32
  wire signed [31:0] mul_temp_26; // sfix32_En32
  wire signed [30:0] product100; // sfix31_En32
  wire signed [31:0] mul_temp_27; // sfix32_En32
  wire signed [30:0] product99; // sfix31_En32
  wire signed [31:0] mul_temp_28; // sfix32_En32
  wire signed [30:0] product98; // sfix31_En32
  wire signed [31:0] mul_temp_29; // sfix32_En32
  wire signed [30:0] product97; // sfix31_En32
  wire signed [31:0] mul_temp_30; // sfix32_En32
  wire signed [30:0] product96; // sfix31_En32
  wire signed [31:0] mul_temp_31; // sfix32_En32
  wire signed [30:0] product95; // sfix31_En32
  wire signed [31:0] mul_temp_32; // sfix32_En32
  wire signed [30:0] product94; // sfix31_En32
  wire signed [31:0] mul_temp_33; // sfix32_En32
  wire signed [30:0] product93; // sfix31_En32
  wire signed [31:0] mul_temp_34; // sfix32_En32
  wire signed [30:0] product92; // sfix31_En32
  wire signed [31:0] mul_temp_35; // sfix32_En32
  wire signed [30:0] product91; // sfix31_En32
  wire signed [31:0] mul_temp_36; // sfix32_En32
  wire signed [30:0] product90; // sfix31_En32
  wire signed [31:0] mul_temp_37; // sfix32_En32
  wire signed [30:0] product89; // sfix31_En32
  wire signed [31:0] mul_temp_38; // sfix32_En32
  wire signed [30:0] product88; // sfix31_En32
  wire signed [31:0] mul_temp_39; // sfix32_En32
  wire signed [30:0] product87; // sfix31_En32
  wire signed [31:0] mul_temp_40; // sfix32_En32
  wire signed [30:0] product86; // sfix31_En32
  wire signed [31:0] mul_temp_41; // sfix32_En32
  wire signed [30:0] product85; // sfix31_En32
  wire signed [31:0] mul_temp_42; // sfix32_En32
  wire signed [30:0] product84; // sfix31_En32
  wire signed [31:0] mul_temp_43; // sfix32_En32
  wire signed [30:0] product83; // sfix31_En32
  wire signed [31:0] mul_temp_44; // sfix32_En32
  wire signed [30:0] product82; // sfix31_En32
  wire signed [31:0] mul_temp_45; // sfix32_En32
  wire signed [30:0] product81; // sfix31_En32
  wire signed [31:0] mul_temp_46; // sfix32_En32
  wire signed [30:0] product80; // sfix31_En32
  wire signed [31:0] mul_temp_47; // sfix32_En32
  wire signed [30:0] product79; // sfix31_En32
  wire signed [31:0] mul_temp_48; // sfix32_En32
  wire signed [30:0] product78; // sfix31_En32
  wire signed [31:0] mul_temp_49; // sfix32_En32
  wire signed [30:0] product77; // sfix31_En32
  wire signed [31:0] mul_temp_50; // sfix32_En32
  wire signed [30:0] product76; // sfix31_En32
  wire signed [31:0] mul_temp_51; // sfix32_En32
  wire signed [30:0] product75; // sfix31_En32
  wire signed [31:0] mul_temp_52; // sfix32_En32
  wire signed [30:0] product74; // sfix31_En32
  wire signed [31:0] mul_temp_53; // sfix32_En32
  wire signed [30:0] product73; // sfix31_En32
  wire signed [31:0] mul_temp_54; // sfix32_En32
  wire signed [30:0] product72; // sfix31_En32
  wire signed [31:0] mul_temp_55; // sfix32_En32
  wire signed [30:0] product71; // sfix31_En32
  wire signed [31:0] mul_temp_56; // sfix32_En32
  wire signed [30:0] product70; // sfix31_En32
  wire signed [31:0] mul_temp_57; // sfix32_En32
  wire signed [30:0] product69; // sfix31_En32
  wire signed [31:0] mul_temp_58; // sfix32_En32
  wire signed [30:0] product68; // sfix31_En32
  wire signed [31:0] mul_temp_59; // sfix32_En32
  wire signed [30:0] product67; // sfix31_En32
  wire signed [31:0] mul_temp_60; // sfix32_En32
  wire signed [30:0] product66; // sfix31_En32
  wire signed [31:0] mul_temp_61; // sfix32_En32
  wire signed [30:0] product65; // sfix31_En32
  wire signed [31:0] mul_temp_62; // sfix32_En32
  wire signed [30:0] product64; // sfix31_En32
  wire signed [31:0] mul_temp_63; // sfix32_En32
  wire signed [30:0] product63; // sfix31_En32
  wire signed [31:0] mul_temp_64; // sfix32_En32
  wire signed [30:0] product62; // sfix31_En32
  wire signed [31:0] mul_temp_65; // sfix32_En32
  wire signed [30:0] product61; // sfix31_En32
  wire signed [31:0] mul_temp_66; // sfix32_En32
  wire signed [30:0] product60; // sfix31_En32
  wire signed [31:0] mul_temp_67; // sfix32_En32
  wire signed [30:0] product59; // sfix31_En32
  wire signed [31:0] mul_temp_68; // sfix32_En32
  wire signed [30:0] product58; // sfix31_En32
  wire signed [31:0] mul_temp_69; // sfix32_En32
  wire signed [30:0] product57; // sfix31_En32
  wire signed [31:0] mul_temp_70; // sfix32_En32
  wire signed [30:0] product56; // sfix31_En32
  wire signed [31:0] mul_temp_71; // sfix32_En32
  wire signed [30:0] product55; // sfix31_En32
  wire signed [31:0] mul_temp_72; // sfix32_En32
  wire signed [30:0] product54; // sfix31_En32
  wire signed [31:0] mul_temp_73; // sfix32_En32
  wire signed [30:0] product53; // sfix31_En32
  wire signed [31:0] mul_temp_74; // sfix32_En32
  wire signed [30:0] product52; // sfix31_En32
  wire signed [31:0] mul_temp_75; // sfix32_En32
  wire signed [30:0] product51; // sfix31_En32
  wire signed [31:0] mul_temp_76; // sfix32_En32
  wire signed [30:0] product50; // sfix31_En32
  wire signed [31:0] mul_temp_77; // sfix32_En32
  wire signed [30:0] product49; // sfix31_En32
  wire signed [31:0] mul_temp_78; // sfix32_En32
  wire signed [30:0] product48; // sfix31_En32
  wire signed [31:0] mul_temp_79; // sfix32_En32
  wire signed [30:0] product47; // sfix31_En32
  wire signed [31:0] mul_temp_80; // sfix32_En32
  wire signed [30:0] product46; // sfix31_En32
  wire signed [31:0] mul_temp_81; // sfix32_En32
  wire signed [30:0] product45; // sfix31_En32
  wire signed [31:0] mul_temp_82; // sfix32_En32
  wire signed [30:0] product44; // sfix31_En32
  wire signed [31:0] mul_temp_83; // sfix32_En32
  wire signed [30:0] product43; // sfix31_En32
  wire signed [31:0] mul_temp_84; // sfix32_En32
  wire signed [30:0] product42; // sfix31_En32
  wire signed [31:0] mul_temp_85; // sfix32_En32
  wire signed [30:0] product41; // sfix31_En32
  wire signed [31:0] mul_temp_86; // sfix32_En32
  wire signed [30:0] product40; // sfix31_En32
  wire signed [31:0] mul_temp_87; // sfix32_En32
  wire signed [30:0] product39; // sfix31_En32
  wire signed [31:0] mul_temp_88; // sfix32_En32
  wire signed [30:0] product38; // sfix31_En32
  wire signed [31:0] mul_temp_89; // sfix32_En32
  wire signed [30:0] product37; // sfix31_En32
  wire signed [31:0] mul_temp_90; // sfix32_En32
  wire signed [30:0] product36; // sfix31_En32
  wire signed [31:0] mul_temp_91; // sfix32_En32
  wire signed [30:0] product35; // sfix31_En32
  wire signed [31:0] mul_temp_92; // sfix32_En32
  wire signed [30:0] product34; // sfix31_En32
  wire signed [31:0] mul_temp_93; // sfix32_En32
  wire signed [30:0] product33; // sfix31_En32
  wire signed [31:0] mul_temp_94; // sfix32_En32
  wire signed [30:0] product32; // sfix31_En32
  wire signed [31:0] mul_temp_95; // sfix32_En32
  wire signed [30:0] product31; // sfix31_En32
  wire signed [31:0] mul_temp_96; // sfix32_En32
  wire signed [30:0] product30; // sfix31_En32
  wire signed [31:0] mul_temp_97; // sfix32_En32
  wire signed [30:0] product29; // sfix31_En32
  wire signed [31:0] mul_temp_98; // sfix32_En32
  wire signed [30:0] product28; // sfix31_En32
  wire signed [31:0] mul_temp_99; // sfix32_En32
  wire signed [30:0] product27; // sfix31_En32
  wire signed [31:0] mul_temp_100; // sfix32_En32
  wire signed [30:0] product26; // sfix31_En32
  wire signed [31:0] mul_temp_101; // sfix32_En32
  wire signed [30:0] product25; // sfix31_En32
  wire signed [31:0] mul_temp_102; // sfix32_En32
  wire signed [30:0] product24; // sfix31_En32
  wire signed [31:0] mul_temp_103; // sfix32_En32
  wire signed [30:0] product23; // sfix31_En32
  wire signed [31:0] mul_temp_104; // sfix32_En32
  wire signed [30:0] product22; // sfix31_En32
  wire signed [31:0] mul_temp_105; // sfix32_En32
  wire signed [30:0] product21; // sfix31_En32
  wire signed [31:0] mul_temp_106; // sfix32_En32
  wire signed [30:0] product20; // sfix31_En32
  wire signed [31:0] mul_temp_107; // sfix32_En32
  wire signed [30:0] product19; // sfix31_En32
  wire signed [31:0] mul_temp_108; // sfix32_En32
  wire signed [30:0] product18; // sfix31_En32
  wire signed [31:0] mul_temp_109; // sfix32_En32
  wire signed [30:0] product17; // sfix31_En32
  wire signed [31:0] mul_temp_110; // sfix32_En32
  wire signed [30:0] product16; // sfix31_En32
  wire signed [31:0] mul_temp_111; // sfix32_En32
  wire signed [30:0] product15; // sfix31_En32
  wire signed [31:0] mul_temp_112; // sfix32_En32
  wire signed [30:0] product14; // sfix31_En32
  wire signed [31:0] mul_temp_113; // sfix32_En32
  wire signed [30:0] product13; // sfix31_En32
  wire signed [31:0] mul_temp_114; // sfix32_En32
  wire signed [30:0] product12; // sfix31_En32
  wire signed [31:0] mul_temp_115; // sfix32_En32
  wire signed [30:0] product11; // sfix31_En32
  wire signed [31:0] mul_temp_116; // sfix32_En32
  wire signed [30:0] product10; // sfix31_En32
  wire signed [31:0] mul_temp_117; // sfix32_En32
  wire signed [30:0] product9; // sfix31_En32
  wire signed [31:0] mul_temp_118; // sfix32_En32
  wire signed [30:0] product8; // sfix31_En32
  wire signed [16:0] mulpwr2_temp_1; // sfix17_En15
  wire signed [30:0] product7; // sfix31_En32
  wire signed [31:0] mul_temp_119; // sfix32_En32
  wire signed [30:0] product6; // sfix31_En32
  wire signed [31:0] mul_temp_120; // sfix32_En32
  wire signed [30:0] product5; // sfix31_En32
  wire signed [31:0] mul_temp_121; // sfix32_En32
  wire signed [30:0] product4; // sfix31_En32
  wire signed [31:0] mul_temp_122; // sfix32_En32
  wire signed [30:0] product3; // sfix31_En32
  wire signed [31:0] mul_temp_123; // sfix32_En32
  wire signed [30:0] product2; // sfix31_En32
  wire signed [31:0] mul_temp_124; // sfix32_En32
  wire signed [30:0] product1; // sfix31_En32
  wire signed [31:0] mul_temp_125; // sfix32_En32
  wire signed [33:0] sum_final; // sfix34_En32
  wire signed [33:0] sum1_1; // sfix34_En32
  wire signed [30:0] add_signext; // sfix31_En32
  wire signed [30:0] add_signext_1; // sfix31_En32
  wire signed [31:0] add_temp; // sfix32_En32
  reg  signed [33:0] sumpipe1_1; // sfix34_En32
  wire signed [33:0] sum1_2; // sfix34_En32
  wire signed [30:0] add_signext_2; // sfix31_En32
  wire signed [30:0] add_signext_3; // sfix31_En32
  wire signed [31:0] add_temp_1; // sfix32_En32
  reg  signed [33:0] sumpipe1_2; // sfix34_En32
  wire signed [33:0] sum1_3; // sfix34_En32
  wire signed [30:0] add_signext_4; // sfix31_En32
  wire signed [30:0] add_signext_5; // sfix31_En32
  wire signed [31:0] add_temp_2; // sfix32_En32
  reg  signed [33:0] sumpipe1_3; // sfix34_En32
  wire signed [33:0] sum1_4; // sfix34_En32
  wire signed [30:0] add_signext_6; // sfix31_En32
  wire signed [30:0] add_signext_7; // sfix31_En32
  wire signed [31:0] add_temp_3; // sfix32_En32
  reg  signed [33:0] sumpipe1_4; // sfix34_En32
  wire signed [33:0] sum1_5; // sfix34_En32
  wire signed [30:0] add_signext_8; // sfix31_En32
  wire signed [30:0] add_signext_9; // sfix31_En32
  wire signed [31:0] add_temp_4; // sfix32_En32
  reg  signed [33:0] sumpipe1_5; // sfix34_En32
  wire signed [33:0] sum1_6; // sfix34_En32
  wire signed [30:0] add_signext_10; // sfix31_En32
  wire signed [30:0] add_signext_11; // sfix31_En32
  wire signed [31:0] add_temp_5; // sfix32_En32
  reg  signed [33:0] sumpipe1_6; // sfix34_En32
  wire signed [33:0] sum1_7; // sfix34_En32
  wire signed [30:0] add_signext_12; // sfix31_En32
  wire signed [30:0] add_signext_13; // sfix31_En32
  wire signed [31:0] add_temp_6; // sfix32_En32
  reg  signed [33:0] sumpipe1_7; // sfix34_En32
  wire signed [33:0] sum1_8; // sfix34_En32
  wire signed [30:0] add_signext_14; // sfix31_En32
  wire signed [30:0] add_signext_15; // sfix31_En32
  wire signed [31:0] add_temp_7; // sfix32_En32
  reg  signed [33:0] sumpipe1_8; // sfix34_En32
  wire signed [33:0] sum1_9; // sfix34_En32
  wire signed [30:0] add_signext_16; // sfix31_En32
  wire signed [30:0] add_signext_17; // sfix31_En32
  wire signed [31:0] add_temp_8; // sfix32_En32
  reg  signed [33:0] sumpipe1_9; // sfix34_En32
  wire signed [33:0] sum1_10; // sfix34_En32
  wire signed [30:0] add_signext_18; // sfix31_En32
  wire signed [30:0] add_signext_19; // sfix31_En32
  wire signed [31:0] add_temp_9; // sfix32_En32
  reg  signed [33:0] sumpipe1_10; // sfix34_En32
  wire signed [33:0] sum1_11; // sfix34_En32
  wire signed [30:0] add_signext_20; // sfix31_En32
  wire signed [30:0] add_signext_21; // sfix31_En32
  wire signed [31:0] add_temp_10; // sfix32_En32
  reg  signed [33:0] sumpipe1_11; // sfix34_En32
  wire signed [33:0] sum1_12; // sfix34_En32
  wire signed [30:0] add_signext_22; // sfix31_En32
  wire signed [30:0] add_signext_23; // sfix31_En32
  wire signed [31:0] add_temp_11; // sfix32_En32
  reg  signed [33:0] sumpipe1_12; // sfix34_En32
  wire signed [33:0] sum1_13; // sfix34_En32
  wire signed [30:0] add_signext_24; // sfix31_En32
  wire signed [30:0] add_signext_25; // sfix31_En32
  wire signed [31:0] add_temp_12; // sfix32_En32
  reg  signed [33:0] sumpipe1_13; // sfix34_En32
  wire signed [33:0] sum1_14; // sfix34_En32
  wire signed [30:0] add_signext_26; // sfix31_En32
  wire signed [30:0] add_signext_27; // sfix31_En32
  wire signed [31:0] add_temp_13; // sfix32_En32
  reg  signed [33:0] sumpipe1_14; // sfix34_En32
  wire signed [33:0] sum1_15; // sfix34_En32
  wire signed [30:0] add_signext_28; // sfix31_En32
  wire signed [30:0] add_signext_29; // sfix31_En32
  wire signed [31:0] add_temp_14; // sfix32_En32
  reg  signed [33:0] sumpipe1_15; // sfix34_En32
  wire signed [33:0] sum1_16; // sfix34_En32
  wire signed [30:0] add_signext_30; // sfix31_En32
  wire signed [30:0] add_signext_31; // sfix31_En32
  wire signed [31:0] add_temp_15; // sfix32_En32
  reg  signed [33:0] sumpipe1_16; // sfix34_En32
  wire signed [33:0] sum1_17; // sfix34_En32
  wire signed [30:0] add_signext_32; // sfix31_En32
  wire signed [30:0] add_signext_33; // sfix31_En32
  wire signed [31:0] add_temp_16; // sfix32_En32
  reg  signed [33:0] sumpipe1_17; // sfix34_En32
  wire signed [33:0] sum1_18; // sfix34_En32
  wire signed [30:0] add_signext_34; // sfix31_En32
  wire signed [30:0] add_signext_35; // sfix31_En32
  wire signed [31:0] add_temp_17; // sfix32_En32
  reg  signed [33:0] sumpipe1_18; // sfix34_En32
  wire signed [33:0] sum1_19; // sfix34_En32
  wire signed [30:0] add_signext_36; // sfix31_En32
  wire signed [30:0] add_signext_37; // sfix31_En32
  wire signed [31:0] add_temp_18; // sfix32_En32
  reg  signed [33:0] sumpipe1_19; // sfix34_En32
  wire signed [33:0] sum1_20; // sfix34_En32
  wire signed [30:0] add_signext_38; // sfix31_En32
  wire signed [30:0] add_signext_39; // sfix31_En32
  wire signed [31:0] add_temp_19; // sfix32_En32
  reg  signed [33:0] sumpipe1_20; // sfix34_En32
  wire signed [33:0] sum1_21; // sfix34_En32
  wire signed [30:0] add_signext_40; // sfix31_En32
  wire signed [30:0] add_signext_41; // sfix31_En32
  wire signed [31:0] add_temp_20; // sfix32_En32
  reg  signed [33:0] sumpipe1_21; // sfix34_En32
  wire signed [33:0] sum1_22; // sfix34_En32
  wire signed [30:0] add_signext_42; // sfix31_En32
  wire signed [30:0] add_signext_43; // sfix31_En32
  wire signed [31:0] add_temp_21; // sfix32_En32
  reg  signed [33:0] sumpipe1_22; // sfix34_En32
  wire signed [33:0] sum1_23; // sfix34_En32
  wire signed [30:0] add_signext_44; // sfix31_En32
  wire signed [30:0] add_signext_45; // sfix31_En32
  wire signed [31:0] add_temp_22; // sfix32_En32
  reg  signed [33:0] sumpipe1_23; // sfix34_En32
  wire signed [33:0] sum1_24; // sfix34_En32
  wire signed [30:0] add_signext_46; // sfix31_En32
  wire signed [30:0] add_signext_47; // sfix31_En32
  wire signed [31:0] add_temp_23; // sfix32_En32
  reg  signed [33:0] sumpipe1_24; // sfix34_En32
  wire signed [33:0] sum1_25; // sfix34_En32
  wire signed [30:0] add_signext_48; // sfix31_En32
  wire signed [30:0] add_signext_49; // sfix31_En32
  wire signed [31:0] add_temp_24; // sfix32_En32
  reg  signed [33:0] sumpipe1_25; // sfix34_En32
  wire signed [33:0] sum1_26; // sfix34_En32
  wire signed [30:0] add_signext_50; // sfix31_En32
  wire signed [30:0] add_signext_51; // sfix31_En32
  wire signed [31:0] add_temp_25; // sfix32_En32
  reg  signed [33:0] sumpipe1_26; // sfix34_En32
  wire signed [33:0] sum1_27; // sfix34_En32
  wire signed [30:0] add_signext_52; // sfix31_En32
  wire signed [30:0] add_signext_53; // sfix31_En32
  wire signed [31:0] add_temp_26; // sfix32_En32
  reg  signed [33:0] sumpipe1_27; // sfix34_En32
  wire signed [33:0] sum1_28; // sfix34_En32
  wire signed [30:0] add_signext_54; // sfix31_En32
  wire signed [30:0] add_signext_55; // sfix31_En32
  wire signed [31:0] add_temp_27; // sfix32_En32
  reg  signed [33:0] sumpipe1_28; // sfix34_En32
  wire signed [33:0] sum1_29; // sfix34_En32
  wire signed [30:0] add_signext_56; // sfix31_En32
  wire signed [30:0] add_signext_57; // sfix31_En32
  wire signed [31:0] add_temp_28; // sfix32_En32
  reg  signed [33:0] sumpipe1_29; // sfix34_En32
  wire signed [33:0] sum1_30; // sfix34_En32
  wire signed [30:0] add_signext_58; // sfix31_En32
  wire signed [30:0] add_signext_59; // sfix31_En32
  wire signed [31:0] add_temp_29; // sfix32_En32
  reg  signed [33:0] sumpipe1_30; // sfix34_En32
  wire signed [33:0] sum1_31; // sfix34_En32
  wire signed [30:0] add_signext_60; // sfix31_En32
  wire signed [30:0] add_signext_61; // sfix31_En32
  wire signed [31:0] add_temp_30; // sfix32_En32
  reg  signed [33:0] sumpipe1_31; // sfix34_En32
  wire signed [33:0] sum1_32; // sfix34_En32
  wire signed [30:0] add_signext_62; // sfix31_En32
  wire signed [30:0] add_signext_63; // sfix31_En32
  wire signed [31:0] add_temp_31; // sfix32_En32
  reg  signed [33:0] sumpipe1_32; // sfix34_En32
  wire signed [33:0] sum1_33; // sfix34_En32
  wire signed [30:0] add_signext_64; // sfix31_En32
  wire signed [30:0] add_signext_65; // sfix31_En32
  wire signed [31:0] add_temp_32; // sfix32_En32
  reg  signed [33:0] sumpipe1_33; // sfix34_En32
  wire signed [33:0] sum1_34; // sfix34_En32
  wire signed [30:0] add_signext_66; // sfix31_En32
  wire signed [30:0] add_signext_67; // sfix31_En32
  wire signed [31:0] add_temp_33; // sfix32_En32
  reg  signed [33:0] sumpipe1_34; // sfix34_En32
  wire signed [33:0] sum1_35; // sfix34_En32
  wire signed [30:0] add_signext_68; // sfix31_En32
  wire signed [30:0] add_signext_69; // sfix31_En32
  wire signed [31:0] add_temp_34; // sfix32_En32
  reg  signed [33:0] sumpipe1_35; // sfix34_En32
  wire signed [33:0] sum1_36; // sfix34_En32
  wire signed [30:0] add_signext_70; // sfix31_En32
  wire signed [30:0] add_signext_71; // sfix31_En32
  wire signed [31:0] add_temp_35; // sfix32_En32
  reg  signed [33:0] sumpipe1_36; // sfix34_En32
  wire signed [33:0] sum1_37; // sfix34_En32
  wire signed [30:0] add_signext_72; // sfix31_En32
  wire signed [30:0] add_signext_73; // sfix31_En32
  wire signed [31:0] add_temp_36; // sfix32_En32
  reg  signed [33:0] sumpipe1_37; // sfix34_En32
  wire signed [33:0] sum1_38; // sfix34_En32
  wire signed [30:0] add_signext_74; // sfix31_En32
  wire signed [30:0] add_signext_75; // sfix31_En32
  wire signed [31:0] add_temp_37; // sfix32_En32
  reg  signed [33:0] sumpipe1_38; // sfix34_En32
  wire signed [33:0] sum1_39; // sfix34_En32
  wire signed [30:0] add_signext_76; // sfix31_En32
  wire signed [30:0] add_signext_77; // sfix31_En32
  wire signed [31:0] add_temp_38; // sfix32_En32
  reg  signed [33:0] sumpipe1_39; // sfix34_En32
  wire signed [33:0] sum1_40; // sfix34_En32
  wire signed [30:0] add_signext_78; // sfix31_En32
  wire signed [30:0] add_signext_79; // sfix31_En32
  wire signed [31:0] add_temp_39; // sfix32_En32
  reg  signed [33:0] sumpipe1_40; // sfix34_En32
  wire signed [33:0] sum1_41; // sfix34_En32
  wire signed [30:0] add_signext_80; // sfix31_En32
  wire signed [30:0] add_signext_81; // sfix31_En32
  wire signed [31:0] add_temp_40; // sfix32_En32
  reg  signed [33:0] sumpipe1_41; // sfix34_En32
  wire signed [33:0] sum1_42; // sfix34_En32
  wire signed [30:0] add_signext_82; // sfix31_En32
  wire signed [30:0] add_signext_83; // sfix31_En32
  wire signed [31:0] add_temp_41; // sfix32_En32
  reg  signed [33:0] sumpipe1_42; // sfix34_En32
  wire signed [33:0] sum1_43; // sfix34_En32
  wire signed [30:0] add_signext_84; // sfix31_En32
  wire signed [30:0] add_signext_85; // sfix31_En32
  wire signed [31:0] add_temp_42; // sfix32_En32
  reg  signed [33:0] sumpipe1_43; // sfix34_En32
  wire signed [33:0] sum1_44; // sfix34_En32
  wire signed [30:0] add_signext_86; // sfix31_En32
  wire signed [30:0] add_signext_87; // sfix31_En32
  wire signed [31:0] add_temp_43; // sfix32_En32
  reg  signed [33:0] sumpipe1_44; // sfix34_En32
  wire signed [33:0] sum1_45; // sfix34_En32
  wire signed [30:0] add_signext_88; // sfix31_En32
  wire signed [30:0] add_signext_89; // sfix31_En32
  wire signed [31:0] add_temp_44; // sfix32_En32
  reg  signed [33:0] sumpipe1_45; // sfix34_En32
  wire signed [33:0] sum1_46; // sfix34_En32
  wire signed [30:0] add_signext_90; // sfix31_En32
  wire signed [30:0] add_signext_91; // sfix31_En32
  wire signed [31:0] add_temp_45; // sfix32_En32
  reg  signed [33:0] sumpipe1_46; // sfix34_En32
  wire signed [33:0] sum1_47; // sfix34_En32
  wire signed [30:0] add_signext_92; // sfix31_En32
  wire signed [30:0] add_signext_93; // sfix31_En32
  wire signed [31:0] add_temp_46; // sfix32_En32
  reg  signed [33:0] sumpipe1_47; // sfix34_En32
  wire signed [33:0] sum1_48; // sfix34_En32
  wire signed [30:0] add_signext_94; // sfix31_En32
  wire signed [30:0] add_signext_95; // sfix31_En32
  wire signed [31:0] add_temp_47; // sfix32_En32
  reg  signed [33:0] sumpipe1_48; // sfix34_En32
  wire signed [33:0] sum1_49; // sfix34_En32
  wire signed [30:0] add_signext_96; // sfix31_En32
  wire signed [30:0] add_signext_97; // sfix31_En32
  wire signed [31:0] add_temp_48; // sfix32_En32
  reg  signed [33:0] sumpipe1_49; // sfix34_En32
  wire signed [33:0] sum1_50; // sfix34_En32
  wire signed [30:0] add_signext_98; // sfix31_En32
  wire signed [30:0] add_signext_99; // sfix31_En32
  wire signed [31:0] add_temp_49; // sfix32_En32
  reg  signed [33:0] sumpipe1_50; // sfix34_En32
  wire signed [33:0] sum1_51; // sfix34_En32
  wire signed [30:0] add_signext_100; // sfix31_En32
  wire signed [30:0] add_signext_101; // sfix31_En32
  wire signed [31:0] add_temp_50; // sfix32_En32
  reg  signed [33:0] sumpipe1_51; // sfix34_En32
  wire signed [33:0] sum1_52; // sfix34_En32
  wire signed [30:0] add_signext_102; // sfix31_En32
  wire signed [30:0] add_signext_103; // sfix31_En32
  wire signed [31:0] add_temp_51; // sfix32_En32
  reg  signed [33:0] sumpipe1_52; // sfix34_En32
  wire signed [33:0] sum1_53; // sfix34_En32
  wire signed [30:0] add_signext_104; // sfix31_En32
  wire signed [30:0] add_signext_105; // sfix31_En32
  wire signed [31:0] add_temp_52; // sfix32_En32
  reg  signed [33:0] sumpipe1_53; // sfix34_En32
  wire signed [33:0] sum1_54; // sfix34_En32
  wire signed [30:0] add_signext_106; // sfix31_En32
  wire signed [30:0] add_signext_107; // sfix31_En32
  wire signed [31:0] add_temp_53; // sfix32_En32
  reg  signed [33:0] sumpipe1_54; // sfix34_En32
  wire signed [33:0] sum1_55; // sfix34_En32
  wire signed [30:0] add_signext_108; // sfix31_En32
  wire signed [30:0] add_signext_109; // sfix31_En32
  wire signed [31:0] add_temp_54; // sfix32_En32
  reg  signed [33:0] sumpipe1_55; // sfix34_En32
  wire signed [33:0] sum1_56; // sfix34_En32
  wire signed [30:0] add_signext_110; // sfix31_En32
  wire signed [30:0] add_signext_111; // sfix31_En32
  wire signed [31:0] add_temp_55; // sfix32_En32
  reg  signed [33:0] sumpipe1_56; // sfix34_En32
  wire signed [33:0] sum1_57; // sfix34_En32
  wire signed [30:0] add_signext_112; // sfix31_En32
  wire signed [30:0] add_signext_113; // sfix31_En32
  wire signed [31:0] add_temp_56; // sfix32_En32
  reg  signed [33:0] sumpipe1_57; // sfix34_En32
  wire signed [33:0] sum1_58; // sfix34_En32
  wire signed [30:0] add_signext_114; // sfix31_En32
  wire signed [30:0] add_signext_115; // sfix31_En32
  wire signed [31:0] add_temp_57; // sfix32_En32
  reg  signed [33:0] sumpipe1_58; // sfix34_En32
  wire signed [33:0] sum1_59; // sfix34_En32
  wire signed [30:0] add_signext_116; // sfix31_En32
  wire signed [30:0] add_signext_117; // sfix31_En32
  wire signed [31:0] add_temp_58; // sfix32_En32
  reg  signed [33:0] sumpipe1_59; // sfix34_En32
  wire signed [33:0] sum1_60; // sfix34_En32
  wire signed [30:0] add_signext_118; // sfix31_En32
  wire signed [30:0] add_signext_119; // sfix31_En32
  wire signed [31:0] add_temp_59; // sfix32_En32
  reg  signed [33:0] sumpipe1_60; // sfix34_En32
  wire signed [33:0] sum1_61; // sfix34_En32
  wire signed [30:0] add_signext_120; // sfix31_En32
  wire signed [30:0] add_signext_121; // sfix31_En32
  wire signed [31:0] add_temp_60; // sfix32_En32
  reg  signed [33:0] sumpipe1_61; // sfix34_En32
  wire signed [33:0] sum1_62; // sfix34_En32
  wire signed [30:0] add_signext_122; // sfix31_En32
  wire signed [30:0] add_signext_123; // sfix31_En32
  wire signed [31:0] add_temp_61; // sfix32_En32
  reg  signed [33:0] sumpipe1_62; // sfix34_En32
  wire signed [33:0] sum1_63; // sfix34_En32
  wire signed [30:0] add_signext_124; // sfix31_En32
  wire signed [30:0] add_signext_125; // sfix31_En32
  wire signed [31:0] add_temp_62; // sfix32_En32
  reg  signed [33:0] sumpipe1_63; // sfix34_En32
  wire signed [33:0] sum1_64; // sfix34_En32
  wire signed [30:0] add_signext_126; // sfix31_En32
  wire signed [30:0] add_signext_127; // sfix31_En32
  wire signed [31:0] add_temp_63; // sfix32_En32
  reg  signed [33:0] sumpipe1_64; // sfix34_En32
  wire signed [33:0] sum2_1; // sfix34_En32
  wire signed [33:0] add_signext_128; // sfix34_En32
  wire signed [33:0] add_signext_129; // sfix34_En32
  wire signed [34:0] add_temp_64; // sfix35_En32
  reg  signed [33:0] sumpipe2_1; // sfix34_En32
  wire signed [33:0] sum2_2; // sfix34_En32
  wire signed [33:0] add_signext_130; // sfix34_En32
  wire signed [33:0] add_signext_131; // sfix34_En32
  wire signed [34:0] add_temp_65; // sfix35_En32
  reg  signed [33:0] sumpipe2_2; // sfix34_En32
  wire signed [33:0] sum2_3; // sfix34_En32
  wire signed [33:0] add_signext_132; // sfix34_En32
  wire signed [33:0] add_signext_133; // sfix34_En32
  wire signed [34:0] add_temp_66; // sfix35_En32
  reg  signed [33:0] sumpipe2_3; // sfix34_En32
  wire signed [33:0] sum2_4; // sfix34_En32
  wire signed [33:0] add_signext_134; // sfix34_En32
  wire signed [33:0] add_signext_135; // sfix34_En32
  wire signed [34:0] add_temp_67; // sfix35_En32
  reg  signed [33:0] sumpipe2_4; // sfix34_En32
  wire signed [33:0] sum2_5; // sfix34_En32
  wire signed [33:0] add_signext_136; // sfix34_En32
  wire signed [33:0] add_signext_137; // sfix34_En32
  wire signed [34:0] add_temp_68; // sfix35_En32
  reg  signed [33:0] sumpipe2_5; // sfix34_En32
  wire signed [33:0] sum2_6; // sfix34_En32
  wire signed [33:0] add_signext_138; // sfix34_En32
  wire signed [33:0] add_signext_139; // sfix34_En32
  wire signed [34:0] add_temp_69; // sfix35_En32
  reg  signed [33:0] sumpipe2_6; // sfix34_En32
  wire signed [33:0] sum2_7; // sfix34_En32
  wire signed [33:0] add_signext_140; // sfix34_En32
  wire signed [33:0] add_signext_141; // sfix34_En32
  wire signed [34:0] add_temp_70; // sfix35_En32
  reg  signed [33:0] sumpipe2_7; // sfix34_En32
  wire signed [33:0] sum2_8; // sfix34_En32
  wire signed [33:0] add_signext_142; // sfix34_En32
  wire signed [33:0] add_signext_143; // sfix34_En32
  wire signed [34:0] add_temp_71; // sfix35_En32
  reg  signed [33:0] sumpipe2_8; // sfix34_En32
  wire signed [33:0] sum2_9; // sfix34_En32
  wire signed [33:0] add_signext_144; // sfix34_En32
  wire signed [33:0] add_signext_145; // sfix34_En32
  wire signed [34:0] add_temp_72; // sfix35_En32
  reg  signed [33:0] sumpipe2_9; // sfix34_En32
  wire signed [33:0] sum2_10; // sfix34_En32
  wire signed [33:0] add_signext_146; // sfix34_En32
  wire signed [33:0] add_signext_147; // sfix34_En32
  wire signed [34:0] add_temp_73; // sfix35_En32
  reg  signed [33:0] sumpipe2_10; // sfix34_En32
  wire signed [33:0] sum2_11; // sfix34_En32
  wire signed [33:0] add_signext_148; // sfix34_En32
  wire signed [33:0] add_signext_149; // sfix34_En32
  wire signed [34:0] add_temp_74; // sfix35_En32
  reg  signed [33:0] sumpipe2_11; // sfix34_En32
  wire signed [33:0] sum2_12; // sfix34_En32
  wire signed [33:0] add_signext_150; // sfix34_En32
  wire signed [33:0] add_signext_151; // sfix34_En32
  wire signed [34:0] add_temp_75; // sfix35_En32
  reg  signed [33:0] sumpipe2_12; // sfix34_En32
  wire signed [33:0] sum2_13; // sfix34_En32
  wire signed [33:0] add_signext_152; // sfix34_En32
  wire signed [33:0] add_signext_153; // sfix34_En32
  wire signed [34:0] add_temp_76; // sfix35_En32
  reg  signed [33:0] sumpipe2_13; // sfix34_En32
  wire signed [33:0] sum2_14; // sfix34_En32
  wire signed [33:0] add_signext_154; // sfix34_En32
  wire signed [33:0] add_signext_155; // sfix34_En32
  wire signed [34:0] add_temp_77; // sfix35_En32
  reg  signed [33:0] sumpipe2_14; // sfix34_En32
  wire signed [33:0] sum2_15; // sfix34_En32
  wire signed [33:0] add_signext_156; // sfix34_En32
  wire signed [33:0] add_signext_157; // sfix34_En32
  wire signed [34:0] add_temp_78; // sfix35_En32
  reg  signed [33:0] sumpipe2_15; // sfix34_En32
  wire signed [33:0] sum2_16; // sfix34_En32
  wire signed [33:0] add_signext_158; // sfix34_En32
  wire signed [33:0] add_signext_159; // sfix34_En32
  wire signed [34:0] add_temp_79; // sfix35_En32
  reg  signed [33:0] sumpipe2_16; // sfix34_En32
  wire signed [33:0] sum2_17; // sfix34_En32
  wire signed [33:0] add_signext_160; // sfix34_En32
  wire signed [33:0] add_signext_161; // sfix34_En32
  wire signed [34:0] add_temp_80; // sfix35_En32
  reg  signed [33:0] sumpipe2_17; // sfix34_En32
  wire signed [33:0] sum2_18; // sfix34_En32
  wire signed [33:0] add_signext_162; // sfix34_En32
  wire signed [33:0] add_signext_163; // sfix34_En32
  wire signed [34:0] add_temp_81; // sfix35_En32
  reg  signed [33:0] sumpipe2_18; // sfix34_En32
  wire signed [33:0] sum2_19; // sfix34_En32
  wire signed [33:0] add_signext_164; // sfix34_En32
  wire signed [33:0] add_signext_165; // sfix34_En32
  wire signed [34:0] add_temp_82; // sfix35_En32
  reg  signed [33:0] sumpipe2_19; // sfix34_En32
  wire signed [33:0] sum2_20; // sfix34_En32
  wire signed [33:0] add_signext_166; // sfix34_En32
  wire signed [33:0] add_signext_167; // sfix34_En32
  wire signed [34:0] add_temp_83; // sfix35_En32
  reg  signed [33:0] sumpipe2_20; // sfix34_En32
  wire signed [33:0] sum2_21; // sfix34_En32
  wire signed [33:0] add_signext_168; // sfix34_En32
  wire signed [33:0] add_signext_169; // sfix34_En32
  wire signed [34:0] add_temp_84; // sfix35_En32
  reg  signed [33:0] sumpipe2_21; // sfix34_En32
  wire signed [33:0] sum2_22; // sfix34_En32
  wire signed [33:0] add_signext_170; // sfix34_En32
  wire signed [33:0] add_signext_171; // sfix34_En32
  wire signed [34:0] add_temp_85; // sfix35_En32
  reg  signed [33:0] sumpipe2_22; // sfix34_En32
  wire signed [33:0] sum2_23; // sfix34_En32
  wire signed [33:0] add_signext_172; // sfix34_En32
  wire signed [33:0] add_signext_173; // sfix34_En32
  wire signed [34:0] add_temp_86; // sfix35_En32
  reg  signed [33:0] sumpipe2_23; // sfix34_En32
  wire signed [33:0] sum2_24; // sfix34_En32
  wire signed [33:0] add_signext_174; // sfix34_En32
  wire signed [33:0] add_signext_175; // sfix34_En32
  wire signed [34:0] add_temp_87; // sfix35_En32
  reg  signed [33:0] sumpipe2_24; // sfix34_En32
  wire signed [33:0] sum2_25; // sfix34_En32
  wire signed [33:0] add_signext_176; // sfix34_En32
  wire signed [33:0] add_signext_177; // sfix34_En32
  wire signed [34:0] add_temp_88; // sfix35_En32
  reg  signed [33:0] sumpipe2_25; // sfix34_En32
  wire signed [33:0] sum2_26; // sfix34_En32
  wire signed [33:0] add_signext_178; // sfix34_En32
  wire signed [33:0] add_signext_179; // sfix34_En32
  wire signed [34:0] add_temp_89; // sfix35_En32
  reg  signed [33:0] sumpipe2_26; // sfix34_En32
  wire signed [33:0] sum2_27; // sfix34_En32
  wire signed [33:0] add_signext_180; // sfix34_En32
  wire signed [33:0] add_signext_181; // sfix34_En32
  wire signed [34:0] add_temp_90; // sfix35_En32
  reg  signed [33:0] sumpipe2_27; // sfix34_En32
  wire signed [33:0] sum2_28; // sfix34_En32
  wire signed [33:0] add_signext_182; // sfix34_En32
  wire signed [33:0] add_signext_183; // sfix34_En32
  wire signed [34:0] add_temp_91; // sfix35_En32
  reg  signed [33:0] sumpipe2_28; // sfix34_En32
  wire signed [33:0] sum2_29; // sfix34_En32
  wire signed [33:0] add_signext_184; // sfix34_En32
  wire signed [33:0] add_signext_185; // sfix34_En32
  wire signed [34:0] add_temp_92; // sfix35_En32
  reg  signed [33:0] sumpipe2_29; // sfix34_En32
  wire signed [33:0] sum2_30; // sfix34_En32
  wire signed [33:0] add_signext_186; // sfix34_En32
  wire signed [33:0] add_signext_187; // sfix34_En32
  wire signed [34:0] add_temp_93; // sfix35_En32
  reg  signed [33:0] sumpipe2_30; // sfix34_En32
  wire signed [33:0] sum2_31; // sfix34_En32
  wire signed [33:0] add_signext_188; // sfix34_En32
  wire signed [33:0] add_signext_189; // sfix34_En32
  wire signed [34:0] add_temp_94; // sfix35_En32
  reg  signed [33:0] sumpipe2_31; // sfix34_En32
  wire signed [33:0] sum2_32; // sfix34_En32
  wire signed [33:0] add_signext_190; // sfix34_En32
  wire signed [33:0] add_signext_191; // sfix34_En32
  wire signed [34:0] add_temp_95; // sfix35_En32
  reg  signed [33:0] sumpipe2_32; // sfix34_En32
  wire signed [33:0] sum3_1; // sfix34_En32
  wire signed [33:0] add_signext_192; // sfix34_En32
  wire signed [33:0] add_signext_193; // sfix34_En32
  wire signed [34:0] add_temp_96; // sfix35_En32
  reg  signed [33:0] sumpipe3_1; // sfix34_En32
  wire signed [33:0] sum3_2; // sfix34_En32
  wire signed [33:0] add_signext_194; // sfix34_En32
  wire signed [33:0] add_signext_195; // sfix34_En32
  wire signed [34:0] add_temp_97; // sfix35_En32
  reg  signed [33:0] sumpipe3_2; // sfix34_En32
  wire signed [33:0] sum3_3; // sfix34_En32
  wire signed [33:0] add_signext_196; // sfix34_En32
  wire signed [33:0] add_signext_197; // sfix34_En32
  wire signed [34:0] add_temp_98; // sfix35_En32
  reg  signed [33:0] sumpipe3_3; // sfix34_En32
  wire signed [33:0] sum3_4; // sfix34_En32
  wire signed [33:0] add_signext_198; // sfix34_En32
  wire signed [33:0] add_signext_199; // sfix34_En32
  wire signed [34:0] add_temp_99; // sfix35_En32
  reg  signed [33:0] sumpipe3_4; // sfix34_En32
  wire signed [33:0] sum3_5; // sfix34_En32
  wire signed [33:0] add_signext_200; // sfix34_En32
  wire signed [33:0] add_signext_201; // sfix34_En32
  wire signed [34:0] add_temp_100; // sfix35_En32
  reg  signed [33:0] sumpipe3_5; // sfix34_En32
  wire signed [33:0] sum3_6; // sfix34_En32
  wire signed [33:0] add_signext_202; // sfix34_En32
  wire signed [33:0] add_signext_203; // sfix34_En32
  wire signed [34:0] add_temp_101; // sfix35_En32
  reg  signed [33:0] sumpipe3_6; // sfix34_En32
  wire signed [33:0] sum3_7; // sfix34_En32
  wire signed [33:0] add_signext_204; // sfix34_En32
  wire signed [33:0] add_signext_205; // sfix34_En32
  wire signed [34:0] add_temp_102; // sfix35_En32
  reg  signed [33:0] sumpipe3_7; // sfix34_En32
  wire signed [33:0] sum3_8; // sfix34_En32
  wire signed [33:0] add_signext_206; // sfix34_En32
  wire signed [33:0] add_signext_207; // sfix34_En32
  wire signed [34:0] add_temp_103; // sfix35_En32
  reg  signed [33:0] sumpipe3_8; // sfix34_En32
  wire signed [33:0] sum3_9; // sfix34_En32
  wire signed [33:0] add_signext_208; // sfix34_En32
  wire signed [33:0] add_signext_209; // sfix34_En32
  wire signed [34:0] add_temp_104; // sfix35_En32
  reg  signed [33:0] sumpipe3_9; // sfix34_En32
  wire signed [33:0] sum3_10; // sfix34_En32
  wire signed [33:0] add_signext_210; // sfix34_En32
  wire signed [33:0] add_signext_211; // sfix34_En32
  wire signed [34:0] add_temp_105; // sfix35_En32
  reg  signed [33:0] sumpipe3_10; // sfix34_En32
  wire signed [33:0] sum3_11; // sfix34_En32
  wire signed [33:0] add_signext_212; // sfix34_En32
  wire signed [33:0] add_signext_213; // sfix34_En32
  wire signed [34:0] add_temp_106; // sfix35_En32
  reg  signed [33:0] sumpipe3_11; // sfix34_En32
  wire signed [33:0] sum3_12; // sfix34_En32
  wire signed [33:0] add_signext_214; // sfix34_En32
  wire signed [33:0] add_signext_215; // sfix34_En32
  wire signed [34:0] add_temp_107; // sfix35_En32
  reg  signed [33:0] sumpipe3_12; // sfix34_En32
  wire signed [33:0] sum3_13; // sfix34_En32
  wire signed [33:0] add_signext_216; // sfix34_En32
  wire signed [33:0] add_signext_217; // sfix34_En32
  wire signed [34:0] add_temp_108; // sfix35_En32
  reg  signed [33:0] sumpipe3_13; // sfix34_En32
  wire signed [33:0] sum3_14; // sfix34_En32
  wire signed [33:0] add_signext_218; // sfix34_En32
  wire signed [33:0] add_signext_219; // sfix34_En32
  wire signed [34:0] add_temp_109; // sfix35_En32
  reg  signed [33:0] sumpipe3_14; // sfix34_En32
  wire signed [33:0] sum3_15; // sfix34_En32
  wire signed [33:0] add_signext_220; // sfix34_En32
  wire signed [33:0] add_signext_221; // sfix34_En32
  wire signed [34:0] add_temp_110; // sfix35_En32
  reg  signed [33:0] sumpipe3_15; // sfix34_En32
  wire signed [33:0] sum3_16; // sfix34_En32
  wire signed [33:0] add_signext_222; // sfix34_En32
  wire signed [33:0] add_signext_223; // sfix34_En32
  wire signed [34:0] add_temp_111; // sfix35_En32
  reg  signed [33:0] sumpipe3_16; // sfix34_En32
  wire signed [33:0] sum4_1; // sfix34_En32
  wire signed [33:0] add_signext_224; // sfix34_En32
  wire signed [33:0] add_signext_225; // sfix34_En32
  wire signed [34:0] add_temp_112; // sfix35_En32
  reg  signed [33:0] sumpipe4_1; // sfix34_En32
  wire signed [33:0] sum4_2; // sfix34_En32
  wire signed [33:0] add_signext_226; // sfix34_En32
  wire signed [33:0] add_signext_227; // sfix34_En32
  wire signed [34:0] add_temp_113; // sfix35_En32
  reg  signed [33:0] sumpipe4_2; // sfix34_En32
  wire signed [33:0] sum4_3; // sfix34_En32
  wire signed [33:0] add_signext_228; // sfix34_En32
  wire signed [33:0] add_signext_229; // sfix34_En32
  wire signed [34:0] add_temp_114; // sfix35_En32
  reg  signed [33:0] sumpipe4_3; // sfix34_En32
  wire signed [33:0] sum4_4; // sfix34_En32
  wire signed [33:0] add_signext_230; // sfix34_En32
  wire signed [33:0] add_signext_231; // sfix34_En32
  wire signed [34:0] add_temp_115; // sfix35_En32
  reg  signed [33:0] sumpipe4_4; // sfix34_En32
  wire signed [33:0] sum4_5; // sfix34_En32
  wire signed [33:0] add_signext_232; // sfix34_En32
  wire signed [33:0] add_signext_233; // sfix34_En32
  wire signed [34:0] add_temp_116; // sfix35_En32
  reg  signed [33:0] sumpipe4_5; // sfix34_En32
  wire signed [33:0] sum4_6; // sfix34_En32
  wire signed [33:0] add_signext_234; // sfix34_En32
  wire signed [33:0] add_signext_235; // sfix34_En32
  wire signed [34:0] add_temp_117; // sfix35_En32
  reg  signed [33:0] sumpipe4_6; // sfix34_En32
  wire signed [33:0] sum4_7; // sfix34_En32
  wire signed [33:0] add_signext_236; // sfix34_En32
  wire signed [33:0] add_signext_237; // sfix34_En32
  wire signed [34:0] add_temp_118; // sfix35_En32
  reg  signed [33:0] sumpipe4_7; // sfix34_En32
  wire signed [33:0] sum4_8; // sfix34_En32
  wire signed [33:0] add_signext_238; // sfix34_En32
  wire signed [33:0] add_signext_239; // sfix34_En32
  wire signed [34:0] add_temp_119; // sfix35_En32
  reg  signed [33:0] sumpipe4_8; // sfix34_En32
  wire signed [33:0] sum5_1; // sfix34_En32
  wire signed [33:0] add_signext_240; // sfix34_En32
  wire signed [33:0] add_signext_241; // sfix34_En32
  wire signed [34:0] add_temp_120; // sfix35_En32
  reg  signed [33:0] sumpipe5_1; // sfix34_En32
  wire signed [33:0] sum5_2; // sfix34_En32
  wire signed [33:0] add_signext_242; // sfix34_En32
  wire signed [33:0] add_signext_243; // sfix34_En32
  wire signed [34:0] add_temp_121; // sfix35_En32
  reg  signed [33:0] sumpipe5_2; // sfix34_En32
  wire signed [33:0] sum5_3; // sfix34_En32
  wire signed [33:0] add_signext_244; // sfix34_En32
  wire signed [33:0] add_signext_245; // sfix34_En32
  wire signed [34:0] add_temp_122; // sfix35_En32
  reg  signed [33:0] sumpipe5_3; // sfix34_En32
  wire signed [33:0] sum5_4; // sfix34_En32
  wire signed [33:0] add_signext_246; // sfix34_En32
  wire signed [33:0] add_signext_247; // sfix34_En32
  wire signed [34:0] add_temp_123; // sfix35_En32
  reg  signed [33:0] sumpipe5_4; // sfix34_En32
  wire signed [33:0] sum6_1; // sfix34_En32
  wire signed [33:0] add_signext_248; // sfix34_En32
  wire signed [33:0] add_signext_249; // sfix34_En32
  wire signed [34:0] add_temp_124; // sfix35_En32
  reg  signed [33:0] sumpipe6_1; // sfix34_En32
  wire signed [33:0] sum6_2; // sfix34_En32
  wire signed [33:0] add_signext_250; // sfix34_En32
  wire signed [33:0] add_signext_251; // sfix34_En32
  wire signed [34:0] add_temp_125; // sfix35_En32
  reg  signed [33:0] sumpipe6_2; // sfix34_En32
  wire signed [33:0] sum7_1; // sfix34_En32
  wire signed [33:0] add_signext_252; // sfix34_En32
  wire signed [33:0] add_signext_253; // sfix34_En32
  wire signed [34:0] add_temp_126; // sfix35_En32
  reg  signed [33:0] sumpipe7_1; // sfix34_En32
  reg  signed [33:0] output_register; // sfix34_En32

  // Block Statements
  always @( posedge clk)
    begin: Delay_Pipeline_process
      if (reset == 1'b1) begin
        delay_pipeline[0] <= 0;
        delay_pipeline[1] <= 0;
        delay_pipeline[2] <= 0;
        delay_pipeline[3] <= 0;
        delay_pipeline[4] <= 0;
        delay_pipeline[5] <= 0;
        delay_pipeline[6] <= 0;
        delay_pipeline[7] <= 0;
        delay_pipeline[8] <= 0;
        delay_pipeline[9] <= 0;
        delay_pipeline[10] <= 0;
        delay_pipeline[11] <= 0;
        delay_pipeline[12] <= 0;
        delay_pipeline[13] <= 0;
        delay_pipeline[14] <= 0;
        delay_pipeline[15] <= 0;
        delay_pipeline[16] <= 0;
        delay_pipeline[17] <= 0;
        delay_pipeline[18] <= 0;
        delay_pipeline[19] <= 0;
        delay_pipeline[20] <= 0;
        delay_pipeline[21] <= 0;
        delay_pipeline[22] <= 0;
        delay_pipeline[23] <= 0;
        delay_pipeline[24] <= 0;
        delay_pipeline[25] <= 0;
        delay_pipeline[26] <= 0;
        delay_pipeline[27] <= 0;
        delay_pipeline[28] <= 0;
        delay_pipeline[29] <= 0;
        delay_pipeline[30] <= 0;
        delay_pipeline[31] <= 0;
        delay_pipeline[32] <= 0;
        delay_pipeline[33] <= 0;
        delay_pipeline[34] <= 0;
        delay_pipeline[35] <= 0;
        delay_pipeline[36] <= 0;
        delay_pipeline[37] <= 0;
        delay_pipeline[38] <= 0;
        delay_pipeline[39] <= 0;
        delay_pipeline[40] <= 0;
        delay_pipeline[41] <= 0;
        delay_pipeline[42] <= 0;
        delay_pipeline[43] <= 0;
        delay_pipeline[44] <= 0;
        delay_pipeline[45] <= 0;
        delay_pipeline[46] <= 0;
        delay_pipeline[47] <= 0;
        delay_pipeline[48] <= 0;
        delay_pipeline[49] <= 0;
        delay_pipeline[50] <= 0;
        delay_pipeline[51] <= 0;
        delay_pipeline[52] <= 0;
        delay_pipeline[53] <= 0;
        delay_pipeline[54] <= 0;
        delay_pipeline[55] <= 0;
        delay_pipeline[56] <= 0;
        delay_pipeline[57] <= 0;
        delay_pipeline[58] <= 0;
        delay_pipeline[59] <= 0;
        delay_pipeline[60] <= 0;
        delay_pipeline[61] <= 0;
        delay_pipeline[62] <= 0;
        delay_pipeline[63] <= 0;
        delay_pipeline[64] <= 0;
        delay_pipeline[65] <= 0;
        delay_pipeline[66] <= 0;
        delay_pipeline[67] <= 0;
        delay_pipeline[68] <= 0;
        delay_pipeline[69] <= 0;
        delay_pipeline[70] <= 0;
        delay_pipeline[71] <= 0;
        delay_pipeline[72] <= 0;
        delay_pipeline[73] <= 0;
        delay_pipeline[74] <= 0;
        delay_pipeline[75] <= 0;
        delay_pipeline[76] <= 0;
        delay_pipeline[77] <= 0;
        delay_pipeline[78] <= 0;
        delay_pipeline[79] <= 0;
        delay_pipeline[80] <= 0;
        delay_pipeline[81] <= 0;
        delay_pipeline[82] <= 0;
        delay_pipeline[83] <= 0;
        delay_pipeline[84] <= 0;
        delay_pipeline[85] <= 0;
        delay_pipeline[86] <= 0;
        delay_pipeline[87] <= 0;
        delay_pipeline[88] <= 0;
        delay_pipeline[89] <= 0;
        delay_pipeline[90] <= 0;
        delay_pipeline[91] <= 0;
        delay_pipeline[92] <= 0;
        delay_pipeline[93] <= 0;
        delay_pipeline[94] <= 0;
        delay_pipeline[95] <= 0;
        delay_pipeline[96] <= 0;
        delay_pipeline[97] <= 0;
        delay_pipeline[98] <= 0;
        delay_pipeline[99] <= 0;
        delay_pipeline[100] <= 0;
        delay_pipeline[101] <= 0;
        delay_pipeline[102] <= 0;
        delay_pipeline[103] <= 0;
        delay_pipeline[104] <= 0;
        delay_pipeline[105] <= 0;
        delay_pipeline[106] <= 0;
        delay_pipeline[107] <= 0;
        delay_pipeline[108] <= 0;
        delay_pipeline[109] <= 0;
        delay_pipeline[110] <= 0;
        delay_pipeline[111] <= 0;
        delay_pipeline[112] <= 0;
        delay_pipeline[113] <= 0;
        delay_pipeline[114] <= 0;
        delay_pipeline[115] <= 0;
        delay_pipeline[116] <= 0;
        delay_pipeline[117] <= 0;
        delay_pipeline[118] <= 0;
        delay_pipeline[119] <= 0;
        delay_pipeline[120] <= 0;
        delay_pipeline[121] <= 0;
        delay_pipeline[122] <= 0;
        delay_pipeline[123] <= 0;
        delay_pipeline[124] <= 0;
        delay_pipeline[125] <= 0;
        delay_pipeline[126] <= 0;
        delay_pipeline[127] <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          delay_pipeline[0] <= filter_in;
          delay_pipeline[1] <= delay_pipeline[0];
          delay_pipeline[2] <= delay_pipeline[1];
          delay_pipeline[3] <= delay_pipeline[2];
          delay_pipeline[4] <= delay_pipeline[3];
          delay_pipeline[5] <= delay_pipeline[4];
          delay_pipeline[6] <= delay_pipeline[5];
          delay_pipeline[7] <= delay_pipeline[6];
          delay_pipeline[8] <= delay_pipeline[7];
          delay_pipeline[9] <= delay_pipeline[8];
          delay_pipeline[10] <= delay_pipeline[9];
          delay_pipeline[11] <= delay_pipeline[10];
          delay_pipeline[12] <= delay_pipeline[11];
          delay_pipeline[13] <= delay_pipeline[12];
          delay_pipeline[14] <= delay_pipeline[13];
          delay_pipeline[15] <= delay_pipeline[14];
          delay_pipeline[16] <= delay_pipeline[15];
          delay_pipeline[17] <= delay_pipeline[16];
          delay_pipeline[18] <= delay_pipeline[17];
          delay_pipeline[19] <= delay_pipeline[18];
          delay_pipeline[20] <= delay_pipeline[19];
          delay_pipeline[21] <= delay_pipeline[20];
          delay_pipeline[22] <= delay_pipeline[21];
          delay_pipeline[23] <= delay_pipeline[22];
          delay_pipeline[24] <= delay_pipeline[23];
          delay_pipeline[25] <= delay_pipeline[24];
          delay_pipeline[26] <= delay_pipeline[25];
          delay_pipeline[27] <= delay_pipeline[26];
          delay_pipeline[28] <= delay_pipeline[27];
          delay_pipeline[29] <= delay_pipeline[28];
          delay_pipeline[30] <= delay_pipeline[29];
          delay_pipeline[31] <= delay_pipeline[30];
          delay_pipeline[32] <= delay_pipeline[31];
          delay_pipeline[33] <= delay_pipeline[32];
          delay_pipeline[34] <= delay_pipeline[33];
          delay_pipeline[35] <= delay_pipeline[34];
          delay_pipeline[36] <= delay_pipeline[35];
          delay_pipeline[37] <= delay_pipeline[36];
          delay_pipeline[38] <= delay_pipeline[37];
          delay_pipeline[39] <= delay_pipeline[38];
          delay_pipeline[40] <= delay_pipeline[39];
          delay_pipeline[41] <= delay_pipeline[40];
          delay_pipeline[42] <= delay_pipeline[41];
          delay_pipeline[43] <= delay_pipeline[42];
          delay_pipeline[44] <= delay_pipeline[43];
          delay_pipeline[45] <= delay_pipeline[44];
          delay_pipeline[46] <= delay_pipeline[45];
          delay_pipeline[47] <= delay_pipeline[46];
          delay_pipeline[48] <= delay_pipeline[47];
          delay_pipeline[49] <= delay_pipeline[48];
          delay_pipeline[50] <= delay_pipeline[49];
          delay_pipeline[51] <= delay_pipeline[50];
          delay_pipeline[52] <= delay_pipeline[51];
          delay_pipeline[53] <= delay_pipeline[52];
          delay_pipeline[54] <= delay_pipeline[53];
          delay_pipeline[55] <= delay_pipeline[54];
          delay_pipeline[56] <= delay_pipeline[55];
          delay_pipeline[57] <= delay_pipeline[56];
          delay_pipeline[58] <= delay_pipeline[57];
          delay_pipeline[59] <= delay_pipeline[58];
          delay_pipeline[60] <= delay_pipeline[59];
          delay_pipeline[61] <= delay_pipeline[60];
          delay_pipeline[62] <= delay_pipeline[61];
          delay_pipeline[63] <= delay_pipeline[62];
          delay_pipeline[64] <= delay_pipeline[63];
          delay_pipeline[65] <= delay_pipeline[64];
          delay_pipeline[66] <= delay_pipeline[65];
          delay_pipeline[67] <= delay_pipeline[66];
          delay_pipeline[68] <= delay_pipeline[67];
          delay_pipeline[69] <= delay_pipeline[68];
          delay_pipeline[70] <= delay_pipeline[69];
          delay_pipeline[71] <= delay_pipeline[70];
          delay_pipeline[72] <= delay_pipeline[71];
          delay_pipeline[73] <= delay_pipeline[72];
          delay_pipeline[74] <= delay_pipeline[73];
          delay_pipeline[75] <= delay_pipeline[74];
          delay_pipeline[76] <= delay_pipeline[75];
          delay_pipeline[77] <= delay_pipeline[76];
          delay_pipeline[78] <= delay_pipeline[77];
          delay_pipeline[79] <= delay_pipeline[78];
          delay_pipeline[80] <= delay_pipeline[79];
          delay_pipeline[81] <= delay_pipeline[80];
          delay_pipeline[82] <= delay_pipeline[81];
          delay_pipeline[83] <= delay_pipeline[82];
          delay_pipeline[84] <= delay_pipeline[83];
          delay_pipeline[85] <= delay_pipeline[84];
          delay_pipeline[86] <= delay_pipeline[85];
          delay_pipeline[87] <= delay_pipeline[86];
          delay_pipeline[88] <= delay_pipeline[87];
          delay_pipeline[89] <= delay_pipeline[88];
          delay_pipeline[90] <= delay_pipeline[89];
          delay_pipeline[91] <= delay_pipeline[90];
          delay_pipeline[92] <= delay_pipeline[91];
          delay_pipeline[93] <= delay_pipeline[92];
          delay_pipeline[94] <= delay_pipeline[93];
          delay_pipeline[95] <= delay_pipeline[94];
          delay_pipeline[96] <= delay_pipeline[95];
          delay_pipeline[97] <= delay_pipeline[96];
          delay_pipeline[98] <= delay_pipeline[97];
          delay_pipeline[99] <= delay_pipeline[98];
          delay_pipeline[100] <= delay_pipeline[99];
          delay_pipeline[101] <= delay_pipeline[100];
          delay_pipeline[102] <= delay_pipeline[101];
          delay_pipeline[103] <= delay_pipeline[102];
          delay_pipeline[104] <= delay_pipeline[103];
          delay_pipeline[105] <= delay_pipeline[104];
          delay_pipeline[106] <= delay_pipeline[105];
          delay_pipeline[107] <= delay_pipeline[106];
          delay_pipeline[108] <= delay_pipeline[107];
          delay_pipeline[109] <= delay_pipeline[108];
          delay_pipeline[110] <= delay_pipeline[109];
          delay_pipeline[111] <= delay_pipeline[110];
          delay_pipeline[112] <= delay_pipeline[111];
          delay_pipeline[113] <= delay_pipeline[112];
          delay_pipeline[114] <= delay_pipeline[113];
          delay_pipeline[115] <= delay_pipeline[114];
          delay_pipeline[116] <= delay_pipeline[115];
          delay_pipeline[117] <= delay_pipeline[116];
          delay_pipeline[118] <= delay_pipeline[117];
          delay_pipeline[119] <= delay_pipeline[118];
          delay_pipeline[120] <= delay_pipeline[119];
          delay_pipeline[121] <= delay_pipeline[120];
          delay_pipeline[122] <= delay_pipeline[121];
          delay_pipeline[123] <= delay_pipeline[122];
          delay_pipeline[124] <= delay_pipeline[123];
          delay_pipeline[125] <= delay_pipeline[124];
          delay_pipeline[126] <= delay_pipeline[125];
          delay_pipeline[127] <= delay_pipeline[126];
        end
      end
    end // Delay_Pipeline_process


  assign mul_temp = delay_pipeline[127] * coeff128;
  assign product128 = mul_temp[30:0];

  assign mul_temp_1 = delay_pipeline[126] * coeff127;
  assign product127 = mul_temp_1[30:0];

  assign mul_temp_2 = delay_pipeline[125] * coeff126;
  assign product126 = mul_temp_2[30:0];

  assign mul_temp_3 = delay_pipeline[124] * coeff125;
  assign product125 = mul_temp_3[30:0];

  assign mul_temp_4 = delay_pipeline[123] * coeff124;
  assign product124 = mul_temp_4[30:0];

  assign mul_temp_5 = delay_pipeline[122] * coeff123;
  assign product123 = mul_temp_5[30:0];

  assign mul_temp_6 = delay_pipeline[121] * coeff122;
  assign product122 = mul_temp_6[30:0];

  assign mulpwr2_temp = (delay_pipeline[120]==16'b1000000000000000) ? $signed({1'b0, delay_pipeline[120]}) : -delay_pipeline[120];

  assign product121 = $signed({mulpwr2_temp[16:0], 6'b000000});

  assign mul_temp_7 = delay_pipeline[119] * coeff120;
  assign product120 = mul_temp_7[30:0];

  assign mul_temp_8 = delay_pipeline[118] * coeff119;
  assign product119 = mul_temp_8[30:0];

  assign mul_temp_9 = delay_pipeline[117] * coeff118;
  assign product118 = mul_temp_9[30:0];

  assign mul_temp_10 = delay_pipeline[116] * coeff117;
  assign product117 = mul_temp_10[30:0];

  assign mul_temp_11 = delay_pipeline[115] * coeff116;
  assign product116 = mul_temp_11[30:0];

  assign mul_temp_12 = delay_pipeline[114] * coeff115;
  assign product115 = mul_temp_12[30:0];

  assign mul_temp_13 = delay_pipeline[113] * coeff114;
  assign product114 = mul_temp_13[30:0];

  assign mul_temp_14 = delay_pipeline[112] * coeff113;
  assign product113 = mul_temp_14[30:0];

  assign mul_temp_15 = delay_pipeline[111] * coeff112;
  assign product112 = mul_temp_15[30:0];

  assign mul_temp_16 = delay_pipeline[110] * coeff111;
  assign product111 = mul_temp_16[30:0];

  assign mul_temp_17 = delay_pipeline[109] * coeff110;
  assign product110 = mul_temp_17[30:0];

  assign mul_temp_18 = delay_pipeline[108] * coeff109;
  assign product109 = mul_temp_18[30:0];

  assign mul_temp_19 = delay_pipeline[107] * coeff108;
  assign product108 = mul_temp_19[30:0];

  assign mul_temp_20 = delay_pipeline[106] * coeff107;
  assign product107 = mul_temp_20[30:0];

  assign mul_temp_21 = delay_pipeline[105] * coeff106;
  assign product106 = mul_temp_21[30:0];

  assign mul_temp_22 = delay_pipeline[104] * coeff105;
  assign product105 = mul_temp_22[30:0];

  assign mul_temp_23 = delay_pipeline[103] * coeff104;
  assign product104 = mul_temp_23[30:0];

  assign mul_temp_24 = delay_pipeline[102] * coeff103;
  assign product103 = mul_temp_24[30:0];

  assign mul_temp_25 = delay_pipeline[101] * coeff102;
  assign product102 = mul_temp_25[30:0];

  assign mul_temp_26 = delay_pipeline[100] * coeff101;
  assign product101 = mul_temp_26[30:0];

  assign mul_temp_27 = delay_pipeline[99] * coeff100;
  assign product100 = mul_temp_27[30:0];

  assign mul_temp_28 = delay_pipeline[98] * coeff99;
  assign product99 = mul_temp_28[30:0];

  assign mul_temp_29 = delay_pipeline[97] * coeff98;
  assign product98 = mul_temp_29[30:0];

  assign mul_temp_30 = delay_pipeline[96] * coeff97;
  assign product97 = mul_temp_30[30:0];

  assign mul_temp_31 = delay_pipeline[95] * coeff96;
  assign product96 = mul_temp_31[30:0];

  assign mul_temp_32 = delay_pipeline[94] * coeff95;
  assign product95 = mul_temp_32[30:0];

  assign mul_temp_33 = delay_pipeline[93] * coeff94;
  assign product94 = mul_temp_33[30:0];

  assign mul_temp_34 = delay_pipeline[92] * coeff93;
  assign product93 = mul_temp_34[30:0];

  assign mul_temp_35 = delay_pipeline[91] * coeff92;
  assign product92 = mul_temp_35[30:0];

  assign mul_temp_36 = delay_pipeline[90] * coeff91;
  assign product91 = mul_temp_36[30:0];

  assign mul_temp_37 = delay_pipeline[89] * coeff90;
  assign product90 = mul_temp_37[30:0];

  assign mul_temp_38 = delay_pipeline[88] * coeff89;
  assign product89 = mul_temp_38[30:0];

  assign mul_temp_39 = delay_pipeline[87] * coeff88;
  assign product88 = mul_temp_39[30:0];

  assign mul_temp_40 = delay_pipeline[86] * coeff87;
  assign product87 = mul_temp_40[30:0];

  assign mul_temp_41 = delay_pipeline[85] * coeff86;
  assign product86 = mul_temp_41[30:0];

  assign mul_temp_42 = delay_pipeline[84] * coeff85;
  assign product85 = mul_temp_42[30:0];

  assign mul_temp_43 = delay_pipeline[83] * coeff84;
  assign product84 = mul_temp_43[30:0];

  assign mul_temp_44 = delay_pipeline[82] * coeff83;
  assign product83 = mul_temp_44[30:0];

  assign mul_temp_45 = delay_pipeline[81] * coeff82;
  assign product82 = mul_temp_45[30:0];

  assign mul_temp_46 = delay_pipeline[80] * coeff81;
  assign product81 = mul_temp_46[30:0];

  assign mul_temp_47 = delay_pipeline[79] * coeff80;
  assign product80 = mul_temp_47[30:0];

  assign mul_temp_48 = delay_pipeline[78] * coeff79;
  assign product79 = mul_temp_48[30:0];

  assign mul_temp_49 = delay_pipeline[77] * coeff78;
  assign product78 = mul_temp_49[30:0];

  assign mul_temp_50 = delay_pipeline[76] * coeff77;
  assign product77 = mul_temp_50[30:0];

  assign mul_temp_51 = delay_pipeline[75] * coeff76;
  assign product76 = mul_temp_51[30:0];

  assign mul_temp_52 = delay_pipeline[74] * coeff75;
  assign product75 = mul_temp_52[30:0];

  assign mul_temp_53 = delay_pipeline[73] * coeff74;
  assign product74 = mul_temp_53[30:0];

  assign mul_temp_54 = delay_pipeline[72] * coeff73;
  assign product73 = mul_temp_54[30:0];

  assign mul_temp_55 = delay_pipeline[71] * coeff72;
  assign product72 = mul_temp_55[30:0];

  assign mul_temp_56 = delay_pipeline[70] * coeff71;
  assign product71 = mul_temp_56[30:0];

  assign mul_temp_57 = delay_pipeline[69] * coeff70;
  assign product70 = mul_temp_57[30:0];

  assign mul_temp_58 = delay_pipeline[68] * coeff69;
  assign product69 = mul_temp_58[30:0];

  assign mul_temp_59 = delay_pipeline[67] * coeff68;
  assign product68 = mul_temp_59[30:0];

  assign mul_temp_60 = delay_pipeline[66] * coeff67;
  assign product67 = mul_temp_60[30:0];

  assign mul_temp_61 = delay_pipeline[65] * coeff66;
  assign product66 = mul_temp_61[30:0];

  assign mul_temp_62 = delay_pipeline[64] * coeff65;
  assign product65 = mul_temp_62[30:0];

  assign mul_temp_63 = delay_pipeline[63] * coeff64;
  assign product64 = mul_temp_63[30:0];

  assign mul_temp_64 = delay_pipeline[62] * coeff63;
  assign product63 = mul_temp_64[30:0];

  assign mul_temp_65 = delay_pipeline[61] * coeff62;
  assign product62 = mul_temp_65[30:0];

  assign mul_temp_66 = delay_pipeline[60] * coeff61;
  assign product61 = mul_temp_66[30:0];

  assign mul_temp_67 = delay_pipeline[59] * coeff60;
  assign product60 = mul_temp_67[30:0];

  assign mul_temp_68 = delay_pipeline[58] * coeff59;
  assign product59 = mul_temp_68[30:0];

  assign mul_temp_69 = delay_pipeline[57] * coeff58;
  assign product58 = mul_temp_69[30:0];

  assign mul_temp_70 = delay_pipeline[56] * coeff57;
  assign product57 = mul_temp_70[30:0];

  assign mul_temp_71 = delay_pipeline[55] * coeff56;
  assign product56 = mul_temp_71[30:0];

  assign mul_temp_72 = delay_pipeline[54] * coeff55;
  assign product55 = mul_temp_72[30:0];

  assign mul_temp_73 = delay_pipeline[53] * coeff54;
  assign product54 = mul_temp_73[30:0];

  assign mul_temp_74 = delay_pipeline[52] * coeff53;
  assign product53 = mul_temp_74[30:0];

  assign mul_temp_75 = delay_pipeline[51] * coeff52;
  assign product52 = mul_temp_75[30:0];

  assign mul_temp_76 = delay_pipeline[50] * coeff51;
  assign product51 = mul_temp_76[30:0];

  assign mul_temp_77 = delay_pipeline[49] * coeff50;
  assign product50 = mul_temp_77[30:0];

  assign mul_temp_78 = delay_pipeline[48] * coeff49;
  assign product49 = mul_temp_78[30:0];

  assign mul_temp_79 = delay_pipeline[47] * coeff48;
  assign product48 = mul_temp_79[30:0];

  assign mul_temp_80 = delay_pipeline[46] * coeff47;
  assign product47 = mul_temp_80[30:0];

  assign mul_temp_81 = delay_pipeline[45] * coeff46;
  assign product46 = mul_temp_81[30:0];

  assign mul_temp_82 = delay_pipeline[44] * coeff45;
  assign product45 = mul_temp_82[30:0];

  assign mul_temp_83 = delay_pipeline[43] * coeff44;
  assign product44 = mul_temp_83[30:0];

  assign mul_temp_84 = delay_pipeline[42] * coeff43;
  assign product43 = mul_temp_84[30:0];

  assign mul_temp_85 = delay_pipeline[41] * coeff42;
  assign product42 = mul_temp_85[30:0];

  assign mul_temp_86 = delay_pipeline[40] * coeff41;
  assign product41 = mul_temp_86[30:0];

  assign mul_temp_87 = delay_pipeline[39] * coeff40;
  assign product40 = mul_temp_87[30:0];

  assign mul_temp_88 = delay_pipeline[38] * coeff39;
  assign product39 = mul_temp_88[30:0];

  assign mul_temp_89 = delay_pipeline[37] * coeff38;
  assign product38 = mul_temp_89[30:0];

  assign mul_temp_90 = delay_pipeline[36] * coeff37;
  assign product37 = mul_temp_90[30:0];

  assign mul_temp_91 = delay_pipeline[35] * coeff36;
  assign product36 = mul_temp_91[30:0];

  assign mul_temp_92 = delay_pipeline[34] * coeff35;
  assign product35 = mul_temp_92[30:0];

  assign mul_temp_93 = delay_pipeline[33] * coeff34;
  assign product34 = mul_temp_93[30:0];

  assign mul_temp_94 = delay_pipeline[32] * coeff33;
  assign product33 = mul_temp_94[30:0];

  assign mul_temp_95 = delay_pipeline[31] * coeff32;
  assign product32 = mul_temp_95[30:0];

  assign mul_temp_96 = delay_pipeline[30] * coeff31;
  assign product31 = mul_temp_96[30:0];

  assign mul_temp_97 = delay_pipeline[29] * coeff30;
  assign product30 = mul_temp_97[30:0];

  assign mul_temp_98 = delay_pipeline[28] * coeff29;
  assign product29 = mul_temp_98[30:0];

  assign mul_temp_99 = delay_pipeline[27] * coeff28;
  assign product28 = mul_temp_99[30:0];

  assign mul_temp_100 = delay_pipeline[26] * coeff27;
  assign product27 = mul_temp_100[30:0];

  assign mul_temp_101 = delay_pipeline[25] * coeff26;
  assign product26 = mul_temp_101[30:0];

  assign mul_temp_102 = delay_pipeline[24] * coeff25;
  assign product25 = mul_temp_102[30:0];

  assign mul_temp_103 = delay_pipeline[23] * coeff24;
  assign product24 = mul_temp_103[30:0];

  assign mul_temp_104 = delay_pipeline[22] * coeff23;
  assign product23 = mul_temp_104[30:0];

  assign mul_temp_105 = delay_pipeline[21] * coeff22;
  assign product22 = mul_temp_105[30:0];

  assign mul_temp_106 = delay_pipeline[20] * coeff21;
  assign product21 = mul_temp_106[30:0];

  assign mul_temp_107 = delay_pipeline[19] * coeff20;
  assign product20 = mul_temp_107[30:0];

  assign mul_temp_108 = delay_pipeline[18] * coeff19;
  assign product19 = mul_temp_108[30:0];

  assign mul_temp_109 = delay_pipeline[17] * coeff18;
  assign product18 = mul_temp_109[30:0];

  assign mul_temp_110 = delay_pipeline[16] * coeff17;
  assign product17 = mul_temp_110[30:0];

  assign mul_temp_111 = delay_pipeline[15] * coeff16;
  assign product16 = mul_temp_111[30:0];

  assign mul_temp_112 = delay_pipeline[14] * coeff15;
  assign product15 = mul_temp_112[30:0];

  assign mul_temp_113 = delay_pipeline[13] * coeff14;
  assign product14 = mul_temp_113[30:0];

  assign mul_temp_114 = delay_pipeline[12] * coeff13;
  assign product13 = mul_temp_114[30:0];

  assign mul_temp_115 = delay_pipeline[11] * coeff12;
  assign product12 = mul_temp_115[30:0];

  assign mul_temp_116 = delay_pipeline[10] * coeff11;
  assign product11 = mul_temp_116[30:0];

  assign mul_temp_117 = delay_pipeline[9] * coeff10;
  assign product10 = mul_temp_117[30:0];

  assign mul_temp_118 = delay_pipeline[8] * coeff9;
  assign product9 = mul_temp_118[30:0];

  assign mulpwr2_temp_1 = (delay_pipeline[7]==16'b1000000000000000) ? $signed({1'b0, delay_pipeline[7]}) : -delay_pipeline[7];

  assign product8 = $signed({mulpwr2_temp_1[16:0], 6'b000000});

  assign mul_temp_119 = delay_pipeline[6] * coeff7;
  assign product7 = mul_temp_119[30:0];

  assign mul_temp_120 = delay_pipeline[5] * coeff6;
  assign product6 = mul_temp_120[30:0];

  assign mul_temp_121 = delay_pipeline[4] * coeff5;
  assign product5 = mul_temp_121[30:0];

  assign mul_temp_122 = delay_pipeline[3] * coeff4;
  assign product4 = mul_temp_122[30:0];

  assign mul_temp_123 = delay_pipeline[2] * coeff3;
  assign product3 = mul_temp_123[30:0];

  assign mul_temp_124 = delay_pipeline[1] * coeff2;
  assign product2 = mul_temp_124[30:0];

  assign mul_temp_125 = delay_pipeline[0] * coeff1;
  assign product1 = mul_temp_125[30:0];

  assign add_signext = product128;
  assign add_signext_1 = product127;
  assign add_temp = add_signext + add_signext_1;
  assign sum1_1 = $signed({{2{add_temp[31]}}, add_temp});

  assign add_signext_2 = product126;
  assign add_signext_3 = product125;
  assign add_temp_1 = add_signext_2 + add_signext_3;
  assign sum1_2 = $signed({{2{add_temp_1[31]}}, add_temp_1});

  assign add_signext_4 = product124;
  assign add_signext_5 = product123;
  assign add_temp_2 = add_signext_4 + add_signext_5;
  assign sum1_3 = $signed({{2{add_temp_2[31]}}, add_temp_2});

  assign add_signext_6 = product122;
  assign add_signext_7 = product121;
  assign add_temp_3 = add_signext_6 + add_signext_7;
  assign sum1_4 = $signed({{2{add_temp_3[31]}}, add_temp_3});

  assign add_signext_8 = product120;
  assign add_signext_9 = product119;
  assign add_temp_4 = add_signext_8 + add_signext_9;
  assign sum1_5 = $signed({{2{add_temp_4[31]}}, add_temp_4});

  assign add_signext_10 = product118;
  assign add_signext_11 = product117;
  assign add_temp_5 = add_signext_10 + add_signext_11;
  assign sum1_6 = $signed({{2{add_temp_5[31]}}, add_temp_5});

  assign add_signext_12 = product116;
  assign add_signext_13 = product115;
  assign add_temp_6 = add_signext_12 + add_signext_13;
  assign sum1_7 = $signed({{2{add_temp_6[31]}}, add_temp_6});

  assign add_signext_14 = product114;
  assign add_signext_15 = product113;
  assign add_temp_7 = add_signext_14 + add_signext_15;
  assign sum1_8 = $signed({{2{add_temp_7[31]}}, add_temp_7});

  assign add_signext_16 = product112;
  assign add_signext_17 = product111;
  assign add_temp_8 = add_signext_16 + add_signext_17;
  assign sum1_9 = $signed({{2{add_temp_8[31]}}, add_temp_8});

  assign add_signext_18 = product110;
  assign add_signext_19 = product109;
  assign add_temp_9 = add_signext_18 + add_signext_19;
  assign sum1_10 = $signed({{2{add_temp_9[31]}}, add_temp_9});

  assign add_signext_20 = product108;
  assign add_signext_21 = product107;
  assign add_temp_10 = add_signext_20 + add_signext_21;
  assign sum1_11 = $signed({{2{add_temp_10[31]}}, add_temp_10});

  assign add_signext_22 = product106;
  assign add_signext_23 = product105;
  assign add_temp_11 = add_signext_22 + add_signext_23;
  assign sum1_12 = $signed({{2{add_temp_11[31]}}, add_temp_11});

  assign add_signext_24 = product104;
  assign add_signext_25 = product103;
  assign add_temp_12 = add_signext_24 + add_signext_25;
  assign sum1_13 = $signed({{2{add_temp_12[31]}}, add_temp_12});

  assign add_signext_26 = product102;
  assign add_signext_27 = product101;
  assign add_temp_13 = add_signext_26 + add_signext_27;
  assign sum1_14 = $signed({{2{add_temp_13[31]}}, add_temp_13});

  assign add_signext_28 = product100;
  assign add_signext_29 = product99;
  assign add_temp_14 = add_signext_28 + add_signext_29;
  assign sum1_15 = $signed({{2{add_temp_14[31]}}, add_temp_14});

  assign add_signext_30 = product98;
  assign add_signext_31 = product97;
  assign add_temp_15 = add_signext_30 + add_signext_31;
  assign sum1_16 = $signed({{2{add_temp_15[31]}}, add_temp_15});

  assign add_signext_32 = product96;
  assign add_signext_33 = product95;
  assign add_temp_16 = add_signext_32 + add_signext_33;
  assign sum1_17 = $signed({{2{add_temp_16[31]}}, add_temp_16});

  assign add_signext_34 = product94;
  assign add_signext_35 = product93;
  assign add_temp_17 = add_signext_34 + add_signext_35;
  assign sum1_18 = $signed({{2{add_temp_17[31]}}, add_temp_17});

  assign add_signext_36 = product92;
  assign add_signext_37 = product91;
  assign add_temp_18 = add_signext_36 + add_signext_37;
  assign sum1_19 = $signed({{2{add_temp_18[31]}}, add_temp_18});

  assign add_signext_38 = product90;
  assign add_signext_39 = product89;
  assign add_temp_19 = add_signext_38 + add_signext_39;
  assign sum1_20 = $signed({{2{add_temp_19[31]}}, add_temp_19});

  assign add_signext_40 = product88;
  assign add_signext_41 = product87;
  assign add_temp_20 = add_signext_40 + add_signext_41;
  assign sum1_21 = $signed({{2{add_temp_20[31]}}, add_temp_20});

  assign add_signext_42 = product86;
  assign add_signext_43 = product85;
  assign add_temp_21 = add_signext_42 + add_signext_43;
  assign sum1_22 = $signed({{2{add_temp_21[31]}}, add_temp_21});

  assign add_signext_44 = product84;
  assign add_signext_45 = product83;
  assign add_temp_22 = add_signext_44 + add_signext_45;
  assign sum1_23 = $signed({{2{add_temp_22[31]}}, add_temp_22});

  assign add_signext_46 = product82;
  assign add_signext_47 = product81;
  assign add_temp_23 = add_signext_46 + add_signext_47;
  assign sum1_24 = $signed({{2{add_temp_23[31]}}, add_temp_23});

  assign add_signext_48 = product80;
  assign add_signext_49 = product79;
  assign add_temp_24 = add_signext_48 + add_signext_49;
  assign sum1_25 = $signed({{2{add_temp_24[31]}}, add_temp_24});

  assign add_signext_50 = product78;
  assign add_signext_51 = product77;
  assign add_temp_25 = add_signext_50 + add_signext_51;
  assign sum1_26 = $signed({{2{add_temp_25[31]}}, add_temp_25});

  assign add_signext_52 = product76;
  assign add_signext_53 = product75;
  assign add_temp_26 = add_signext_52 + add_signext_53;
  assign sum1_27 = $signed({{2{add_temp_26[31]}}, add_temp_26});

  assign add_signext_54 = product74;
  assign add_signext_55 = product73;
  assign add_temp_27 = add_signext_54 + add_signext_55;
  assign sum1_28 = $signed({{2{add_temp_27[31]}}, add_temp_27});

  assign add_signext_56 = product72;
  assign add_signext_57 = product71;
  assign add_temp_28 = add_signext_56 + add_signext_57;
  assign sum1_29 = $signed({{2{add_temp_28[31]}}, add_temp_28});

  assign add_signext_58 = product70;
  assign add_signext_59 = product69;
  assign add_temp_29 = add_signext_58 + add_signext_59;
  assign sum1_30 = $signed({{2{add_temp_29[31]}}, add_temp_29});

  assign add_signext_60 = product68;
  assign add_signext_61 = product67;
  assign add_temp_30 = add_signext_60 + add_signext_61;
  assign sum1_31 = $signed({{2{add_temp_30[31]}}, add_temp_30});

  assign add_signext_62 = product66;
  assign add_signext_63 = product65;
  assign add_temp_31 = add_signext_62 + add_signext_63;
  assign sum1_32 = $signed({{2{add_temp_31[31]}}, add_temp_31});

  assign add_signext_64 = product64;
  assign add_signext_65 = product63;
  assign add_temp_32 = add_signext_64 + add_signext_65;
  assign sum1_33 = $signed({{2{add_temp_32[31]}}, add_temp_32});

  assign add_signext_66 = product62;
  assign add_signext_67 = product61;
  assign add_temp_33 = add_signext_66 + add_signext_67;
  assign sum1_34 = $signed({{2{add_temp_33[31]}}, add_temp_33});

  assign add_signext_68 = product60;
  assign add_signext_69 = product59;
  assign add_temp_34 = add_signext_68 + add_signext_69;
  assign sum1_35 = $signed({{2{add_temp_34[31]}}, add_temp_34});

  assign add_signext_70 = product58;
  assign add_signext_71 = product57;
  assign add_temp_35 = add_signext_70 + add_signext_71;
  assign sum1_36 = $signed({{2{add_temp_35[31]}}, add_temp_35});

  assign add_signext_72 = product56;
  assign add_signext_73 = product55;
  assign add_temp_36 = add_signext_72 + add_signext_73;
  assign sum1_37 = $signed({{2{add_temp_36[31]}}, add_temp_36});

  assign add_signext_74 = product54;
  assign add_signext_75 = product53;
  assign add_temp_37 = add_signext_74 + add_signext_75;
  assign sum1_38 = $signed({{2{add_temp_37[31]}}, add_temp_37});

  assign add_signext_76 = product52;
  assign add_signext_77 = product51;
  assign add_temp_38 = add_signext_76 + add_signext_77;
  assign sum1_39 = $signed({{2{add_temp_38[31]}}, add_temp_38});

  assign add_signext_78 = product50;
  assign add_signext_79 = product49;
  assign add_temp_39 = add_signext_78 + add_signext_79;
  assign sum1_40 = $signed({{2{add_temp_39[31]}}, add_temp_39});

  assign add_signext_80 = product48;
  assign add_signext_81 = product47;
  assign add_temp_40 = add_signext_80 + add_signext_81;
  assign sum1_41 = $signed({{2{add_temp_40[31]}}, add_temp_40});

  assign add_signext_82 = product46;
  assign add_signext_83 = product45;
  assign add_temp_41 = add_signext_82 + add_signext_83;
  assign sum1_42 = $signed({{2{add_temp_41[31]}}, add_temp_41});

  assign add_signext_84 = product44;
  assign add_signext_85 = product43;
  assign add_temp_42 = add_signext_84 + add_signext_85;
  assign sum1_43 = $signed({{2{add_temp_42[31]}}, add_temp_42});

  assign add_signext_86 = product42;
  assign add_signext_87 = product41;
  assign add_temp_43 = add_signext_86 + add_signext_87;
  assign sum1_44 = $signed({{2{add_temp_43[31]}}, add_temp_43});

  assign add_signext_88 = product40;
  assign add_signext_89 = product39;
  assign add_temp_44 = add_signext_88 + add_signext_89;
  assign sum1_45 = $signed({{2{add_temp_44[31]}}, add_temp_44});

  assign add_signext_90 = product38;
  assign add_signext_91 = product37;
  assign add_temp_45 = add_signext_90 + add_signext_91;
  assign sum1_46 = $signed({{2{add_temp_45[31]}}, add_temp_45});

  assign add_signext_92 = product36;
  assign add_signext_93 = product35;
  assign add_temp_46 = add_signext_92 + add_signext_93;
  assign sum1_47 = $signed({{2{add_temp_46[31]}}, add_temp_46});

  assign add_signext_94 = product34;
  assign add_signext_95 = product33;
  assign add_temp_47 = add_signext_94 + add_signext_95;
  assign sum1_48 = $signed({{2{add_temp_47[31]}}, add_temp_47});

  assign add_signext_96 = product32;
  assign add_signext_97 = product31;
  assign add_temp_48 = add_signext_96 + add_signext_97;
  assign sum1_49 = $signed({{2{add_temp_48[31]}}, add_temp_48});

  assign add_signext_98 = product30;
  assign add_signext_99 = product29;
  assign add_temp_49 = add_signext_98 + add_signext_99;
  assign sum1_50 = $signed({{2{add_temp_49[31]}}, add_temp_49});

  assign add_signext_100 = product28;
  assign add_signext_101 = product27;
  assign add_temp_50 = add_signext_100 + add_signext_101;
  assign sum1_51 = $signed({{2{add_temp_50[31]}}, add_temp_50});

  assign add_signext_102 = product26;
  assign add_signext_103 = product25;
  assign add_temp_51 = add_signext_102 + add_signext_103;
  assign sum1_52 = $signed({{2{add_temp_51[31]}}, add_temp_51});

  assign add_signext_104 = product24;
  assign add_signext_105 = product23;
  assign add_temp_52 = add_signext_104 + add_signext_105;
  assign sum1_53 = $signed({{2{add_temp_52[31]}}, add_temp_52});

  assign add_signext_106 = product22;
  assign add_signext_107 = product21;
  assign add_temp_53 = add_signext_106 + add_signext_107;
  assign sum1_54 = $signed({{2{add_temp_53[31]}}, add_temp_53});

  assign add_signext_108 = product20;
  assign add_signext_109 = product19;
  assign add_temp_54 = add_signext_108 + add_signext_109;
  assign sum1_55 = $signed({{2{add_temp_54[31]}}, add_temp_54});

  assign add_signext_110 = product18;
  assign add_signext_111 = product17;
  assign add_temp_55 = add_signext_110 + add_signext_111;
  assign sum1_56 = $signed({{2{add_temp_55[31]}}, add_temp_55});

  assign add_signext_112 = product16;
  assign add_signext_113 = product15;
  assign add_temp_56 = add_signext_112 + add_signext_113;
  assign sum1_57 = $signed({{2{add_temp_56[31]}}, add_temp_56});

  assign add_signext_114 = product14;
  assign add_signext_115 = product13;
  assign add_temp_57 = add_signext_114 + add_signext_115;
  assign sum1_58 = $signed({{2{add_temp_57[31]}}, add_temp_57});

  assign add_signext_116 = product12;
  assign add_signext_117 = product11;
  assign add_temp_58 = add_signext_116 + add_signext_117;
  assign sum1_59 = $signed({{2{add_temp_58[31]}}, add_temp_58});

  assign add_signext_118 = product10;
  assign add_signext_119 = product9;
  assign add_temp_59 = add_signext_118 + add_signext_119;
  assign sum1_60 = $signed({{2{add_temp_59[31]}}, add_temp_59});

  assign add_signext_120 = product8;
  assign add_signext_121 = product7;
  assign add_temp_60 = add_signext_120 + add_signext_121;
  assign sum1_61 = $signed({{2{add_temp_60[31]}}, add_temp_60});

  assign add_signext_122 = product6;
  assign add_signext_123 = product5;
  assign add_temp_61 = add_signext_122 + add_signext_123;
  assign sum1_62 = $signed({{2{add_temp_61[31]}}, add_temp_61});

  assign add_signext_124 = product4;
  assign add_signext_125 = product3;
  assign add_temp_62 = add_signext_124 + add_signext_125;
  assign sum1_63 = $signed({{2{add_temp_62[31]}}, add_temp_62});

  assign add_signext_126 = product2;
  assign add_signext_127 = product1;
  assign add_temp_63 = add_signext_126 + add_signext_127;
  assign sum1_64 = $signed({{2{add_temp_63[31]}}, add_temp_63});

  always @ ( posedge clk)
    begin: temp_process1
      if (reset == 1'b1) begin
        sumpipe1_1 <= 0;
        sumpipe1_2 <= 0;
        sumpipe1_3 <= 0;
        sumpipe1_4 <= 0;
        sumpipe1_5 <= 0;
        sumpipe1_6 <= 0;
        sumpipe1_7 <= 0;
        sumpipe1_8 <= 0;
        sumpipe1_9 <= 0;
        sumpipe1_10 <= 0;
        sumpipe1_11 <= 0;
        sumpipe1_12 <= 0;
        sumpipe1_13 <= 0;
        sumpipe1_14 <= 0;
        sumpipe1_15 <= 0;
        sumpipe1_16 <= 0;
        sumpipe1_17 <= 0;
        sumpipe1_18 <= 0;
        sumpipe1_19 <= 0;
        sumpipe1_20 <= 0;
        sumpipe1_21 <= 0;
        sumpipe1_22 <= 0;
        sumpipe1_23 <= 0;
        sumpipe1_24 <= 0;
        sumpipe1_25 <= 0;
        sumpipe1_26 <= 0;
        sumpipe1_27 <= 0;
        sumpipe1_28 <= 0;
        sumpipe1_29 <= 0;
        sumpipe1_30 <= 0;
        sumpipe1_31 <= 0;
        sumpipe1_32 <= 0;
        sumpipe1_33 <= 0;
        sumpipe1_34 <= 0;
        sumpipe1_35 <= 0;
        sumpipe1_36 <= 0;
        sumpipe1_37 <= 0;
        sumpipe1_38 <= 0;
        sumpipe1_39 <= 0;
        sumpipe1_40 <= 0;
        sumpipe1_41 <= 0;
        sumpipe1_42 <= 0;
        sumpipe1_43 <= 0;
        sumpipe1_44 <= 0;
        sumpipe1_45 <= 0;
        sumpipe1_46 <= 0;
        sumpipe1_47 <= 0;
        sumpipe1_48 <= 0;
        sumpipe1_49 <= 0;
        sumpipe1_50 <= 0;
        sumpipe1_51 <= 0;
        sumpipe1_52 <= 0;
        sumpipe1_53 <= 0;
        sumpipe1_54 <= 0;
        sumpipe1_55 <= 0;
        sumpipe1_56 <= 0;
        sumpipe1_57 <= 0;
        sumpipe1_58 <= 0;
        sumpipe1_59 <= 0;
        sumpipe1_60 <= 0;
        sumpipe1_61 <= 0;
        sumpipe1_62 <= 0;
        sumpipe1_63 <= 0;
        sumpipe1_64 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe1_1 <= sum1_1;
          sumpipe1_2 <= sum1_2;
          sumpipe1_3 <= sum1_3;
          sumpipe1_4 <= sum1_4;
          sumpipe1_5 <= sum1_5;
          sumpipe1_6 <= sum1_6;
          sumpipe1_7 <= sum1_7;
          sumpipe1_8 <= sum1_8;
          sumpipe1_9 <= sum1_9;
          sumpipe1_10 <= sum1_10;
          sumpipe1_11 <= sum1_11;
          sumpipe1_12 <= sum1_12;
          sumpipe1_13 <= sum1_13;
          sumpipe1_14 <= sum1_14;
          sumpipe1_15 <= sum1_15;
          sumpipe1_16 <= sum1_16;
          sumpipe1_17 <= sum1_17;
          sumpipe1_18 <= sum1_18;
          sumpipe1_19 <= sum1_19;
          sumpipe1_20 <= sum1_20;
          sumpipe1_21 <= sum1_21;
          sumpipe1_22 <= sum1_22;
          sumpipe1_23 <= sum1_23;
          sumpipe1_24 <= sum1_24;
          sumpipe1_25 <= sum1_25;
          sumpipe1_26 <= sum1_26;
          sumpipe1_27 <= sum1_27;
          sumpipe1_28 <= sum1_28;
          sumpipe1_29 <= sum1_29;
          sumpipe1_30 <= sum1_30;
          sumpipe1_31 <= sum1_31;
          sumpipe1_32 <= sum1_32;
          sumpipe1_33 <= sum1_33;
          sumpipe1_34 <= sum1_34;
          sumpipe1_35 <= sum1_35;
          sumpipe1_36 <= sum1_36;
          sumpipe1_37 <= sum1_37;
          sumpipe1_38 <= sum1_38;
          sumpipe1_39 <= sum1_39;
          sumpipe1_40 <= sum1_40;
          sumpipe1_41 <= sum1_41;
          sumpipe1_42 <= sum1_42;
          sumpipe1_43 <= sum1_43;
          sumpipe1_44 <= sum1_44;
          sumpipe1_45 <= sum1_45;
          sumpipe1_46 <= sum1_46;
          sumpipe1_47 <= sum1_47;
          sumpipe1_48 <= sum1_48;
          sumpipe1_49 <= sum1_49;
          sumpipe1_50 <= sum1_50;
          sumpipe1_51 <= sum1_51;
          sumpipe1_52 <= sum1_52;
          sumpipe1_53 <= sum1_53;
          sumpipe1_54 <= sum1_54;
          sumpipe1_55 <= sum1_55;
          sumpipe1_56 <= sum1_56;
          sumpipe1_57 <= sum1_57;
          sumpipe1_58 <= sum1_58;
          sumpipe1_59 <= sum1_59;
          sumpipe1_60 <= sum1_60;
          sumpipe1_61 <= sum1_61;
          sumpipe1_62 <= sum1_62;
          sumpipe1_63 <= sum1_63;
          sumpipe1_64 <= sum1_64;
        end
      end
    end // temp_process1

  assign add_signext_128 = sumpipe1_1;
  assign add_signext_129 = sumpipe1_2;
  assign add_temp_64 = add_signext_128 + add_signext_129;
  assign sum2_1 = add_temp_64[33:0];

  assign add_signext_130 = sumpipe1_3;
  assign add_signext_131 = sumpipe1_4;
  assign add_temp_65 = add_signext_130 + add_signext_131;
  assign sum2_2 = add_temp_65[33:0];

  assign add_signext_132 = sumpipe1_5;
  assign add_signext_133 = sumpipe1_6;
  assign add_temp_66 = add_signext_132 + add_signext_133;
  assign sum2_3 = add_temp_66[33:0];

  assign add_signext_134 = sumpipe1_7;
  assign add_signext_135 = sumpipe1_8;
  assign add_temp_67 = add_signext_134 + add_signext_135;
  assign sum2_4 = add_temp_67[33:0];

  assign add_signext_136 = sumpipe1_9;
  assign add_signext_137 = sumpipe1_10;
  assign add_temp_68 = add_signext_136 + add_signext_137;
  assign sum2_5 = add_temp_68[33:0];

  assign add_signext_138 = sumpipe1_11;
  assign add_signext_139 = sumpipe1_12;
  assign add_temp_69 = add_signext_138 + add_signext_139;
  assign sum2_6 = add_temp_69[33:0];

  assign add_signext_140 = sumpipe1_13;
  assign add_signext_141 = sumpipe1_14;
  assign add_temp_70 = add_signext_140 + add_signext_141;
  assign sum2_7 = add_temp_70[33:0];

  assign add_signext_142 = sumpipe1_15;
  assign add_signext_143 = sumpipe1_16;
  assign add_temp_71 = add_signext_142 + add_signext_143;
  assign sum2_8 = add_temp_71[33:0];

  assign add_signext_144 = sumpipe1_17;
  assign add_signext_145 = sumpipe1_18;
  assign add_temp_72 = add_signext_144 + add_signext_145;
  assign sum2_9 = add_temp_72[33:0];

  assign add_signext_146 = sumpipe1_19;
  assign add_signext_147 = sumpipe1_20;
  assign add_temp_73 = add_signext_146 + add_signext_147;
  assign sum2_10 = add_temp_73[33:0];

  assign add_signext_148 = sumpipe1_21;
  assign add_signext_149 = sumpipe1_22;
  assign add_temp_74 = add_signext_148 + add_signext_149;
  assign sum2_11 = add_temp_74[33:0];

  assign add_signext_150 = sumpipe1_23;
  assign add_signext_151 = sumpipe1_24;
  assign add_temp_75 = add_signext_150 + add_signext_151;
  assign sum2_12 = add_temp_75[33:0];

  assign add_signext_152 = sumpipe1_25;
  assign add_signext_153 = sumpipe1_26;
  assign add_temp_76 = add_signext_152 + add_signext_153;
  assign sum2_13 = add_temp_76[33:0];

  assign add_signext_154 = sumpipe1_27;
  assign add_signext_155 = sumpipe1_28;
  assign add_temp_77 = add_signext_154 + add_signext_155;
  assign sum2_14 = add_temp_77[33:0];

  assign add_signext_156 = sumpipe1_29;
  assign add_signext_157 = sumpipe1_30;
  assign add_temp_78 = add_signext_156 + add_signext_157;
  assign sum2_15 = add_temp_78[33:0];

  assign add_signext_158 = sumpipe1_31;
  assign add_signext_159 = sumpipe1_32;
  assign add_temp_79 = add_signext_158 + add_signext_159;
  assign sum2_16 = add_temp_79[33:0];

  assign add_signext_160 = sumpipe1_33;
  assign add_signext_161 = sumpipe1_34;
  assign add_temp_80 = add_signext_160 + add_signext_161;
  assign sum2_17 = add_temp_80[33:0];

  assign add_signext_162 = sumpipe1_35;
  assign add_signext_163 = sumpipe1_36;
  assign add_temp_81 = add_signext_162 + add_signext_163;
  assign sum2_18 = add_temp_81[33:0];

  assign add_signext_164 = sumpipe1_37;
  assign add_signext_165 = sumpipe1_38;
  assign add_temp_82 = add_signext_164 + add_signext_165;
  assign sum2_19 = add_temp_82[33:0];

  assign add_signext_166 = sumpipe1_39;
  assign add_signext_167 = sumpipe1_40;
  assign add_temp_83 = add_signext_166 + add_signext_167;
  assign sum2_20 = add_temp_83[33:0];

  assign add_signext_168 = sumpipe1_41;
  assign add_signext_169 = sumpipe1_42;
  assign add_temp_84 = add_signext_168 + add_signext_169;
  assign sum2_21 = add_temp_84[33:0];

  assign add_signext_170 = sumpipe1_43;
  assign add_signext_171 = sumpipe1_44;
  assign add_temp_85 = add_signext_170 + add_signext_171;
  assign sum2_22 = add_temp_85[33:0];

  assign add_signext_172 = sumpipe1_45;
  assign add_signext_173 = sumpipe1_46;
  assign add_temp_86 = add_signext_172 + add_signext_173;
  assign sum2_23 = add_temp_86[33:0];

  assign add_signext_174 = sumpipe1_47;
  assign add_signext_175 = sumpipe1_48;
  assign add_temp_87 = add_signext_174 + add_signext_175;
  assign sum2_24 = add_temp_87[33:0];

  assign add_signext_176 = sumpipe1_49;
  assign add_signext_177 = sumpipe1_50;
  assign add_temp_88 = add_signext_176 + add_signext_177;
  assign sum2_25 = add_temp_88[33:0];

  assign add_signext_178 = sumpipe1_51;
  assign add_signext_179 = sumpipe1_52;
  assign add_temp_89 = add_signext_178 + add_signext_179;
  assign sum2_26 = add_temp_89[33:0];

  assign add_signext_180 = sumpipe1_53;
  assign add_signext_181 = sumpipe1_54;
  assign add_temp_90 = add_signext_180 + add_signext_181;
  assign sum2_27 = add_temp_90[33:0];

  assign add_signext_182 = sumpipe1_55;
  assign add_signext_183 = sumpipe1_56;
  assign add_temp_91 = add_signext_182 + add_signext_183;
  assign sum2_28 = add_temp_91[33:0];

  assign add_signext_184 = sumpipe1_57;
  assign add_signext_185 = sumpipe1_58;
  assign add_temp_92 = add_signext_184 + add_signext_185;
  assign sum2_29 = add_temp_92[33:0];

  assign add_signext_186 = sumpipe1_59;
  assign add_signext_187 = sumpipe1_60;
  assign add_temp_93 = add_signext_186 + add_signext_187;
  assign sum2_30 = add_temp_93[33:0];

  assign add_signext_188 = sumpipe1_61;
  assign add_signext_189 = sumpipe1_62;
  assign add_temp_94 = add_signext_188 + add_signext_189;
  assign sum2_31 = add_temp_94[33:0];

  assign add_signext_190 = sumpipe1_63;
  assign add_signext_191 = sumpipe1_64;
  assign add_temp_95 = add_signext_190 + add_signext_191;
  assign sum2_32 = add_temp_95[33:0];

  always @ ( posedge clk)
    begin: temp_process2
      if (reset == 1'b1) begin
        sumpipe2_1 <= 0;
        sumpipe2_2 <= 0;
        sumpipe2_3 <= 0;
        sumpipe2_4 <= 0;
        sumpipe2_5 <= 0;
        sumpipe2_6 <= 0;
        sumpipe2_7 <= 0;
        sumpipe2_8 <= 0;
        sumpipe2_9 <= 0;
        sumpipe2_10 <= 0;
        sumpipe2_11 <= 0;
        sumpipe2_12 <= 0;
        sumpipe2_13 <= 0;
        sumpipe2_14 <= 0;
        sumpipe2_15 <= 0;
        sumpipe2_16 <= 0;
        sumpipe2_17 <= 0;
        sumpipe2_18 <= 0;
        sumpipe2_19 <= 0;
        sumpipe2_20 <= 0;
        sumpipe2_21 <= 0;
        sumpipe2_22 <= 0;
        sumpipe2_23 <= 0;
        sumpipe2_24 <= 0;
        sumpipe2_25 <= 0;
        sumpipe2_26 <= 0;
        sumpipe2_27 <= 0;
        sumpipe2_28 <= 0;
        sumpipe2_29 <= 0;
        sumpipe2_30 <= 0;
        sumpipe2_31 <= 0;
        sumpipe2_32 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe2_1 <= sum2_1;
          sumpipe2_2 <= sum2_2;
          sumpipe2_3 <= sum2_3;
          sumpipe2_4 <= sum2_4;
          sumpipe2_5 <= sum2_5;
          sumpipe2_6 <= sum2_6;
          sumpipe2_7 <= sum2_7;
          sumpipe2_8 <= sum2_8;
          sumpipe2_9 <= sum2_9;
          sumpipe2_10 <= sum2_10;
          sumpipe2_11 <= sum2_11;
          sumpipe2_12 <= sum2_12;
          sumpipe2_13 <= sum2_13;
          sumpipe2_14 <= sum2_14;
          sumpipe2_15 <= sum2_15;
          sumpipe2_16 <= sum2_16;
          sumpipe2_17 <= sum2_17;
          sumpipe2_18 <= sum2_18;
          sumpipe2_19 <= sum2_19;
          sumpipe2_20 <= sum2_20;
          sumpipe2_21 <= sum2_21;
          sumpipe2_22 <= sum2_22;
          sumpipe2_23 <= sum2_23;
          sumpipe2_24 <= sum2_24;
          sumpipe2_25 <= sum2_25;
          sumpipe2_26 <= sum2_26;
          sumpipe2_27 <= sum2_27;
          sumpipe2_28 <= sum2_28;
          sumpipe2_29 <= sum2_29;
          sumpipe2_30 <= sum2_30;
          sumpipe2_31 <= sum2_31;
          sumpipe2_32 <= sum2_32;
        end
      end
    end // temp_process2

  assign add_signext_192 = sumpipe2_1;
  assign add_signext_193 = sumpipe2_2;
  assign add_temp_96 = add_signext_192 + add_signext_193;
  assign sum3_1 = add_temp_96[33:0];

  assign add_signext_194 = sumpipe2_3;
  assign add_signext_195 = sumpipe2_4;
  assign add_temp_97 = add_signext_194 + add_signext_195;
  assign sum3_2 = add_temp_97[33:0];

  assign add_signext_196 = sumpipe2_5;
  assign add_signext_197 = sumpipe2_6;
  assign add_temp_98 = add_signext_196 + add_signext_197;
  assign sum3_3 = add_temp_98[33:0];

  assign add_signext_198 = sumpipe2_7;
  assign add_signext_199 = sumpipe2_8;
  assign add_temp_99 = add_signext_198 + add_signext_199;
  assign sum3_4 = add_temp_99[33:0];

  assign add_signext_200 = sumpipe2_9;
  assign add_signext_201 = sumpipe2_10;
  assign add_temp_100 = add_signext_200 + add_signext_201;
  assign sum3_5 = add_temp_100[33:0];

  assign add_signext_202 = sumpipe2_11;
  assign add_signext_203 = sumpipe2_12;
  assign add_temp_101 = add_signext_202 + add_signext_203;
  assign sum3_6 = add_temp_101[33:0];

  assign add_signext_204 = sumpipe2_13;
  assign add_signext_205 = sumpipe2_14;
  assign add_temp_102 = add_signext_204 + add_signext_205;
  assign sum3_7 = add_temp_102[33:0];

  assign add_signext_206 = sumpipe2_15;
  assign add_signext_207 = sumpipe2_16;
  assign add_temp_103 = add_signext_206 + add_signext_207;
  assign sum3_8 = add_temp_103[33:0];

  assign add_signext_208 = sumpipe2_17;
  assign add_signext_209 = sumpipe2_18;
  assign add_temp_104 = add_signext_208 + add_signext_209;
  assign sum3_9 = add_temp_104[33:0];

  assign add_signext_210 = sumpipe2_19;
  assign add_signext_211 = sumpipe2_20;
  assign add_temp_105 = add_signext_210 + add_signext_211;
  assign sum3_10 = add_temp_105[33:0];

  assign add_signext_212 = sumpipe2_21;
  assign add_signext_213 = sumpipe2_22;
  assign add_temp_106 = add_signext_212 + add_signext_213;
  assign sum3_11 = add_temp_106[33:0];

  assign add_signext_214 = sumpipe2_23;
  assign add_signext_215 = sumpipe2_24;
  assign add_temp_107 = add_signext_214 + add_signext_215;
  assign sum3_12 = add_temp_107[33:0];

  assign add_signext_216 = sumpipe2_25;
  assign add_signext_217 = sumpipe2_26;
  assign add_temp_108 = add_signext_216 + add_signext_217;
  assign sum3_13 = add_temp_108[33:0];

  assign add_signext_218 = sumpipe2_27;
  assign add_signext_219 = sumpipe2_28;
  assign add_temp_109 = add_signext_218 + add_signext_219;
  assign sum3_14 = add_temp_109[33:0];

  assign add_signext_220 = sumpipe2_29;
  assign add_signext_221 = sumpipe2_30;
  assign add_temp_110 = add_signext_220 + add_signext_221;
  assign sum3_15 = add_temp_110[33:0];

  assign add_signext_222 = sumpipe2_31;
  assign add_signext_223 = sumpipe2_32;
  assign add_temp_111 = add_signext_222 + add_signext_223;
  assign sum3_16 = add_temp_111[33:0];

  always @ ( posedge clk)
    begin: temp_process3
      if (reset == 1'b1) begin
        sumpipe3_1 <= 0;
        sumpipe3_2 <= 0;
        sumpipe3_3 <= 0;
        sumpipe3_4 <= 0;
        sumpipe3_5 <= 0;
        sumpipe3_6 <= 0;
        sumpipe3_7 <= 0;
        sumpipe3_8 <= 0;
        sumpipe3_9 <= 0;
        sumpipe3_10 <= 0;
        sumpipe3_11 <= 0;
        sumpipe3_12 <= 0;
        sumpipe3_13 <= 0;
        sumpipe3_14 <= 0;
        sumpipe3_15 <= 0;
        sumpipe3_16 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe3_1 <= sum3_1;
          sumpipe3_2 <= sum3_2;
          sumpipe3_3 <= sum3_3;
          sumpipe3_4 <= sum3_4;
          sumpipe3_5 <= sum3_5;
          sumpipe3_6 <= sum3_6;
          sumpipe3_7 <= sum3_7;
          sumpipe3_8 <= sum3_8;
          sumpipe3_9 <= sum3_9;
          sumpipe3_10 <= sum3_10;
          sumpipe3_11 <= sum3_11;
          sumpipe3_12 <= sum3_12;
          sumpipe3_13 <= sum3_13;
          sumpipe3_14 <= sum3_14;
          sumpipe3_15 <= sum3_15;
          sumpipe3_16 <= sum3_16;
        end
      end
    end // temp_process3

  assign add_signext_224 = sumpipe3_1;
  assign add_signext_225 = sumpipe3_2;
  assign add_temp_112 = add_signext_224 + add_signext_225;
  assign sum4_1 = add_temp_112[33:0];

  assign add_signext_226 = sumpipe3_3;
  assign add_signext_227 = sumpipe3_4;
  assign add_temp_113 = add_signext_226 + add_signext_227;
  assign sum4_2 = add_temp_113[33:0];

  assign add_signext_228 = sumpipe3_5;
  assign add_signext_229 = sumpipe3_6;
  assign add_temp_114 = add_signext_228 + add_signext_229;
  assign sum4_3 = add_temp_114[33:0];

  assign add_signext_230 = sumpipe3_7;
  assign add_signext_231 = sumpipe3_8;
  assign add_temp_115 = add_signext_230 + add_signext_231;
  assign sum4_4 = add_temp_115[33:0];

  assign add_signext_232 = sumpipe3_9;
  assign add_signext_233 = sumpipe3_10;
  assign add_temp_116 = add_signext_232 + add_signext_233;
  assign sum4_5 = add_temp_116[33:0];

  assign add_signext_234 = sumpipe3_11;
  assign add_signext_235 = sumpipe3_12;
  assign add_temp_117 = add_signext_234 + add_signext_235;
  assign sum4_6 = add_temp_117[33:0];

  assign add_signext_236 = sumpipe3_13;
  assign add_signext_237 = sumpipe3_14;
  assign add_temp_118 = add_signext_236 + add_signext_237;
  assign sum4_7 = add_temp_118[33:0];

  assign add_signext_238 = sumpipe3_15;
  assign add_signext_239 = sumpipe3_16;
  assign add_temp_119 = add_signext_238 + add_signext_239;
  assign sum4_8 = add_temp_119[33:0];

  always @ ( posedge clk)
    begin: temp_process4
      if (reset == 1'b1) begin
        sumpipe4_1 <= 0;
        sumpipe4_2 <= 0;
        sumpipe4_3 <= 0;
        sumpipe4_4 <= 0;
        sumpipe4_5 <= 0;
        sumpipe4_6 <= 0;
        sumpipe4_7 <= 0;
        sumpipe4_8 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe4_1 <= sum4_1;
          sumpipe4_2 <= sum4_2;
          sumpipe4_3 <= sum4_3;
          sumpipe4_4 <= sum4_4;
          sumpipe4_5 <= sum4_5;
          sumpipe4_6 <= sum4_6;
          sumpipe4_7 <= sum4_7;
          sumpipe4_8 <= sum4_8;
        end
      end
    end // temp_process4

  assign add_signext_240 = sumpipe4_1;
  assign add_signext_241 = sumpipe4_2;
  assign add_temp_120 = add_signext_240 + add_signext_241;
  assign sum5_1 = add_temp_120[33:0];

  assign add_signext_242 = sumpipe4_3;
  assign add_signext_243 = sumpipe4_4;
  assign add_temp_121 = add_signext_242 + add_signext_243;
  assign sum5_2 = add_temp_121[33:0];

  assign add_signext_244 = sumpipe4_5;
  assign add_signext_245 = sumpipe4_6;
  assign add_temp_122 = add_signext_244 + add_signext_245;
  assign sum5_3 = add_temp_122[33:0];

  assign add_signext_246 = sumpipe4_7;
  assign add_signext_247 = sumpipe4_8;
  assign add_temp_123 = add_signext_246 + add_signext_247;
  assign sum5_4 = add_temp_123[33:0];

  always @ ( posedge clk)
    begin: temp_process5
      if (reset == 1'b1) begin
        sumpipe5_1 <= 0;
        sumpipe5_2 <= 0;
        sumpipe5_3 <= 0;
        sumpipe5_4 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe5_1 <= sum5_1;
          sumpipe5_2 <= sum5_2;
          sumpipe5_3 <= sum5_3;
          sumpipe5_4 <= sum5_4;
        end
      end
    end // temp_process5

  assign add_signext_248 = sumpipe5_1;
  assign add_signext_249 = sumpipe5_2;
  assign add_temp_124 = add_signext_248 + add_signext_249;
  assign sum6_1 = add_temp_124[33:0];

  assign add_signext_250 = sumpipe5_3;
  assign add_signext_251 = sumpipe5_4;
  assign add_temp_125 = add_signext_250 + add_signext_251;
  assign sum6_2 = add_temp_125[33:0];

  always @ ( posedge clk)
    begin: temp_process6
      if (reset == 1'b1) begin
        sumpipe6_1 <= 0;
        sumpipe6_2 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe6_1 <= sum6_1;
          sumpipe6_2 <= sum6_2;
        end
      end
    end // temp_process6

  assign add_signext_252 = sumpipe6_1;
  assign add_signext_253 = sumpipe6_2;
  assign add_temp_126 = add_signext_252 + add_signext_253;
  assign sum7_1 = add_temp_126[33:0];

  always @ ( posedge clk)
    begin: temp_process7
      if (reset == 1'b1) begin
        sumpipe7_1 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe7_1 <= sum7_1;
        end
      end
    end // temp_process7

  assign sum_final = sumpipe7_1;

  always @ ( posedge clk)
    begin: Output_Register_process
      if (reset == 1'b1) begin
        output_register <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          output_register <= sum_final;
        end
      end
    end // Output_Register_process

  // Assignment Statements
  assign filter_out = output_register;
endmodule  // fir128hdl
